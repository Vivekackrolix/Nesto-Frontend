"use strict";(self.webpackChunkdsa=self.webpackChunkdsa||[]).push([[303],{3634:function(a,e,n){var i=n(2791),t=n(2007),r=n.n(t),o=[["Afghanistan","AF","Badakhshan~BDS|Badghis~BDG|Baghlan~BGL|Balkh~BAL|Bamyan~BAM|Daykundi~DAY|Farah~FRA|Faryab~FYB|Ghazni~GHA|Ghor~GHO|Helmand~HEL|Herat~HER|Jowzjan~JOW|Kabul~KAB|Kandahar~KAN|Kapisa~KAP|Khost~KHO|Kunar~KNR|Kunduz~KDZ|Laghman~LAG|Logar~LOW|Maidan Wardak~WAR|Nangarhar~NAN|Nimruz~NIM|Nuristan~NUR|Paktia~PIA|Paktika~PKA|Panjshir~PAN|Parwan~PAR|Samangan~SAM|Sar-e Pol~SAR|Takhar~TAK|Urozgan~ORU|Zabul~ZAB"],["\xc5land Islands","AX","Br\xe4nd\xf6~BR|Ecker\xf6~EC|Finstr\xf6m~FN|F\xf6gl\xf6~FG|Geta~GT|Hammarland~HM|Jomala~JM|Kumlinge~KM|K\xf6kar~KK|Lemland~LE|Lumparland~LU|Mariehamn~MH|Saltvik~SV|Sottunga~ST|Sund~SD|V\xe5rd\xf6~VR"],["Albania","AL","Berat~01|Dib\xebr~09|Durr\xebs~02|Elbasan~03|Fier~04|Gjirokast\xebr~05|Kor\xe7\xeb~06|Kuk\xebs~07|Lezh\xeb~08|Shkod\xebr~10|Tirana~11|Vlor\xeb~12"],["Algeria","DZ","Adrar~01|A\xefn Defla~44|A\xefn T\xe9mouchent~46|Algiers~16|Annaba~23|Batna~05|B\xe9char~08|B\xe9ja\xefa~06|Biskra~07|Blida~09|Bordj Bou Arr\xe9ridj~34|Bou\xefra~10|Boumerd\xe8s~35|Chlef~02|Constantine~25|Djelfa~17|El Bayadh~32|El Oued~39|El Tarf~36|Gharda\xefa~47|Guelma~24|Illizi~33|Jijel~18|Khenchela~40|Laghouat~03|Mascara~29|M\xe9d\xe9a~26|Mila~43|Mostaganem~27|Msila~28|Na\xe2ma~45|Oran~31|Ouargla~30|Oum el Bouaghi~04|Relizane~48|Sa\xefda~20|S\xe9tif~19|Sidi Bel Abb\xe8s~22|Skikda~21|Souk Ahras~41|Tamanghasset~11|T\xe9bessa~12|Tiaret~14|Tindouf~37|Tipaza~42|Tissemsilt~38|Tizi Ouzou~15|Tlemcen~13"],["American Samoa","AS","Tutuila~01|Aunu'u~02|Ta'\u016b~03|Ofu\u2011Olosega~04|Rose Atoll~21|Swains Island~22"],["Andorra","AD","Andorra la Vella~07|Canillo~02|Encamp~03|Escaldes-Engordany~08|La Massana~04|Ordino~05|Sant Juli\xe0 de L\xf2ria~06"],["Angola","AO","Bengo~BGO|Benguela~BGU|Bi\xe9~BIE|Cabinda~CAB|Cuando Cubango~CCU|Cuanza Norte~CNO|Cuanza Sul~CUS|Cunene~CNN|Huambo~HUA|Hu\xedla~HUI|Luanda~LUA|Lunda Norte~LNO|Lunda Sul~LSU|Malanje~MAL|Moxico~MOX|Namibe~NAM|U\xedge~UIG|Zaire~ZAI"],["Anguilla","AI","Anguilla~01|Anguillita Island~02|Blowing Rock~03|Cove Cay~04|Crocus Cay~05|Deadman's Cay~06|Dog Island~07|East Cay~08|Little Island~09|Little Scrub Island~10|Mid Cay~11|North Cay~12|Prickly Pear Cays~13|Rabbit Island~14|Sandy Island/Sand Island~15|Scilly Cay~16|Scrub Island~17|Seal Island~18|Sombrero/Hat Island~19|South Cay~20|South Wager Island~21|West Cay~22"],["Antarctica","AQ","Antarctica~AQ"],["Antigua and Barbuda","AG","Antigua Island~01|Barbuda Island~02|Bird Island~04|Bishop Island~05|Blake Island~06|Crump Island~09|Dulcina Island~10|Exchange Island~11|Five Islands~12|Great Bird Island~13|Green Island~14|Guiana Island~15|Hawes Island~17|Hells Gate Island~16|Henry Island~18|Johnson Island~19|Kid Island~20|Lobster Island~22|Maiden Island~24|Moor Island~25|Nanny Island~26|Pelican Island~27|Prickly Pear Island~28|Rabbit Island~29|Red Head Island~31|Redonda Island~03|Sandy Island~32|Smith Island~33|The Sisters~34|Vernon Island~35|Wicked Will Island~36|York Island~37"],["Argentina","AR","Buenos Aires~B|Capital Federal~C|Catamarca~K|Chaco~H|Chubut~U|C\xf3rdoba~X|Corrientes~W|Entre R\xedos~E|Formosa~P|Jujuy~Y|La Pampa~L|La Rioja~F|Mendoza~M|Misiones~N|Neuqu\xe9n~Q|R\xedo Negro~R|Salta~A|San Juan~J|San Luis~D|Santa Cruz~Z|Santa Fe~S|Santiago del Estero~G|Tierra del Fuego~V|Tucum\xe1n~T"],["Armenia","AM","Aragatsotn~AG|Ararat~AR|Armavir~AV|Gegharkunik~GR|Kotayk~KT|Lori~LO|Shirak~SH|Syunik~SU|Tavush~TV|Vayots Dzor~VD|Yerevan~ER"],["Aruba","AW","Aruba~AW"],["Australia","AU","Australian Capital Territory~ACT|New South Wales~NSW|Northern Territory~NT|Queensland~QLD|South Australia~SA|Tasmania~TAS|Victoria~VIC|Western Australia~WA"],["Austria","AT","Burgenland~1|K\xe4rnten~2|Nieder\xf6sterreich~3|Ober\xf6sterreich~4|Salzburg~5|Steiermark~6|Tirol~7|Vorarlberg~8|Wien~9"],["Azerbaijan","AZ","Ab\u015feron~ABS|A\u011fcab\u0259di~AGC|A\u011fdam~AGM|A\u011fda\u015f~AGS|A\u011fstafa~AGA|A\u011fsu~AGU|Astara~AST|Bak\u0131~BAK|Bab\u0259k~BAB|Balak\u0259n~BAL|B\u0259rd\u0259~BAR|Beyl\u0259qan~BEY|Bil\u0259suvar~BIL|C\u0259bray\u0131l~CAB|C\u0259lilabad~CAL|Culfa~CUL|Da\u015fk\u0259s\u0259n~DAS|F\xfczuli~FUZ|G\u0259d\u0259b\u0259y~GAD|Goranboy~GOR|G\xf6y\xe7ay~GOY|G\xf6yg\xf6l~GYG|Hac\u0131qabul~HAC|\u0130mi\u015fli~IMI|\u0130smay\u0131ll\u0131~ISM|K\u0259lb\u0259c\u0259r~KAL|K\u01ddng\u01ddrli~KAN|K\xfcrd\u0259mir~KUR|La\xe7\u0131n~LAC|L\u0259nk\u0259ran~LAN|Lerik~LER|Masall\u0131~MAS|Neft\xe7ala~NEF|O\u011fuz~OGU|Ordubad~ORD|Q\u0259b\u0259l\u0259~QAB|Qax~QAX|Qazax~QAZ|Qobustan~QOB|Quba~QBA|Qubadli~QBI|Qusar~QUS|Saatl\u0131~SAT|Sabirabad~SAB|\u015eabran~SBN|S\u0259d\u0259r\u0259k~SAD|\u015eahbuz~SAH|\u015e\u0259ki~SAK|Salyan~SAL|\u015eamax\u0131~SMI|\u015e\u0259mkir~SKR|Samux~SMX|\u015e\u0259rur~SAR|Siy\u0259z\u0259n~SIY|\u015eu\u015fa~SUS|T\u0259rt\u0259r~TAR|Tovuz~TOV|Ucar~UCA|Xa\xe7maz~XAC|X\u0131z\u0131~XIZ|Xocal\u0131~XCI|Xocav\u0259nd~XVD|Yard\u0131ml\u0131~YAR|Yevlax~YEV|Z\u0259ngilan~ZAN|Zaqatala~ZAQ|Z\u0259rdab~ZAR"],["Bahamas","BS","Acklins Island~01|Berry Islands~22|Bimini~02|Black Point~23|Cat Island~03|Central Abaco~24|Crooked Island and Long Cay~28|East Grand Bahama~29|Exuma~04|Freeport~05|Fresh Creek~06|Governor's Harbour~07|Green Turtle Cay~08|Harbour Island~09|High Rock~10|Inagua~11|Kemps Bay~12|Long Island~13|Marsh Harbour~14|Mayaguana~15|Moore\u2019s Island~40|New Providence~16|Nichollstown and Berry Islands~17|North Abaco~42|North Andros~41|North Eleuthera~33|Ragged Island~18|Rock Sound~19|San Salvador and Rum Cay~20|Sandy Point~21|South Abaco~35|South Andros~36|South Eleuthera~37|West Grand Bahama~39"],["Bahrain","BH","Al Jan\u016bb\u012byah~14|Al Man\u0101mah~13|Al Mu\u1e29arraq~15|Al Wus\u0163\xe1~16|Ash Sham\u0101l\u012byah~17"],["Bangladesh","BD","Barisal~A|Chittagong~B|Dhaka~C|Khulna~D|Mymensingh~M|Rajshahi~E|Rangpur~F|Sylhet~G"],["Barbados","BB","Christ Church~01|Saint Andrew~02|Saint George~03|Saint James~04|Saint John~05|Saint Joseph~06|Saint Lucy~07|Saint Michael~08|Saint Peter~09|Saint Philip~10|Saint Thomas~11"],["Belarus","BY","Brest voblast~BR|Gorod Minsk~HM|Homiel voblast~HO|Hrodna voblast~HR|Mahilyow voblast~MA|Minsk voblast~MI|Vitsebsk voblast~VI"],["Belgium","BE","Brussels~BRU|Flanders~VLG|Wallonia~WAL"],["Belize","BZ","Belize District~BZ|Cayo District~CY|Corozal District~CZL|Orange Walk District~OW|Stann Creek District~SC|Toledo District~TOL"],["Benin","BJ","Alibori~AL|Atakora~AK|Atlantique~AQ|Borgou~BO|Collines Department~CO|Donga~DO|Kouffo~KO|Littoral Department~LI|Mono Department~MO|Ou\xe9m\xe9~OU|Plateau~PL|Zou~ZO"],["Bermuda","BM","City of Hamilton~03|Devonshire Parish~01|Hamilton Parish~02|Paget Parish~04|Pembroke Parish~05|Sandys Parish~08|Smith's Parish~09|Southampton Parish~10|St. George's Parish~07|Town of St. George~06|Warwick Parish~11"],["Bhutan","BT","Bumthang~33|Chhukha~12|Dagana~22|Gasa~GA|Haa~13|Lhuntse~44|Mongar~42|Paro~11|Pemagatshel~43|Punakha~23|Samdrup Jongkhar~45|Samtse~14|Sarpang~31|Thimphu~15|Trashigang~41|Trashiyangtse~TY|Trongsa~32|Tsirang~21|Wangdue Phodrang~24|Zhemgang~34"],["Bolivia","BO","Beni~BE|Chuquisaca~CH|Cochabamba~CB|La Paz~LP|Oruro~OR|Pando~PD|Potos\xed~PT|Santa Cruz~SC|Tarija~TJ"],["Bonaire, Sint Eustatius and Saba","BQ","Bonaire~BO|Saba Isand~SA|Sint Eustatius~SE"],["Bosnia and Herzegovina","BA","Br\u010dko Distrikt~BRC|Federacija Bosne i Hercegovine~BIH|Republika Srpska~SRP"],["Botswana","BW","Central~CE|Ghanzi~GH|Kgalagadi~KG|Kgatleng~KL|Kweneng~KW|North West~NW|North-East~NE|South East~SE|Southern~SO"],["Bouvet Island","BV","Bouvet Island~BV"],["Brazil","BR","Acre~AC|Alagoas~AL|Amap\xe1~AP|Amazonas~AM|Bahia~BA|Cear\xe1~CE|Distrito Federal~DF|Esp\xedrito Santo~ES|Goi\xe1s~GO|Maranh\xe3o~MA|Mato Grosso~MT|Mato Grosso do Sul~MS|Minas Gerais~MG|Par\xe1~PA|Para\xedba~PB|Paran\xe1~PR|Pernambuco~PE|Piau\xed~PI|Rio de Janeiro~RJ|Rio Grande do Norte~RN|Rio Grande do Sul~RS|Rond\xf4nia~RO|Roraima~RR|Santa Catarina~SC|S\xe3o Paulo~SP|Sergipe~SE|Tocantins~TO"],["British Indian Ocean Territory","IO","British Indian Ocean Territory~IO"],["Brunei Darussalam","BN","Belait~BE|Brunei Muara~BM|Temburong~TE|Tutong~TU"],["Bulgaria","BG","Blagoevgrad~01|Burgas~02|Dobrich~08|Gabrovo~07|Jambol~28|Khaskovo~26|Kjustendil~10|Kurdzhali~09|Lovech~11|Montana~12|Pazardzhik~13|Pernik~14|Pleven~15|Plovdiv~16|Razgrad~17|Ruse~18|Shumen~27|Silistra~19|Sliven~20|Smoljan~21|Sofija~23|Sofija-Grad~22|Stara Zagora~24|Turgovishhe~25|Varna~03|Veliko Turnovo~04|Vidin~05|Vraca~06"],["Burkina Faso","BF","Bal\xe9~BAL|Bam/Lake Bam~BAM|Banwa Province~BAN|Baz\xe8ga~BAZ|Bougouriba~BGR|Boulgou Province~BLG|Boulkiemd\xe9~BLK|Como\xe9/Komoe~COM|Ganzourgou Province~GAN|Gnagna~GNA|Gourma Province~GOU|Houet~HOU|Ioba~IOB|Kadiogo~KAD|K\xe9n\xe9dougou~KEN|Komondjari~KMD|Kompienga~KMP|Kossi Province~KOS|Koulp\xe9logo~KOP|Kouritenga~KOT|Kourw\xe9ogo~KOW|L\xe9raba~LER|Loroum~LOR|Mouhoun~MOU|Namentenga~NAM|Naouri/Nahouri~NAO|Nayala~NAY|Noumbiel~NOU|Oubritenga~OUB|Oudalan~OUD|Passor\xe9~PAS|Poni~PON|Sangui\xe9~SNG|Sanmatenga~SMT|S\xe9no~SEN|Sissili~SIS|Soum~SOM|Sourou~SOR|Tapoa~TAP|Tui/Tuy~TUI|Yagha~YAG|Yatenga~YAT|Ziro~ZIR|Zondoma~ZON|Zoundw\xe9ogo~ZOU"],["Burundi","BI","Bubanza~BB|Bujumbura Mairie~BM|Bujumbura Rural~BL|Bururi~BR|Cankuzo~CA|Cibitoke~CI|Gitega~GI|Karuzi~KR|Kayanza~KY|Kirundo~KI|Makamba~MA|Muramvya~MU|Muyinga~MY|Mwaro~MW|Ngozi~NG|Rutana~RT|Ruyigi~RY"],["Cambodia","KH","Baat Dambang~2|Banteay Mean Chey~1|Kampong Chaam~3|Kampong Chhnang~4|Kampong Spueu~5|Kampong Thum~6|Kampot~7|Kandaal~8|Kaoh Kong~9|Kracheh~10|Krong Kaeb~23|Krong Pailin~24|Krong Preah Sihanouk~18|Mondol Kiri~11|Otdar Mean Chey~22|Phnom Penh~12|Pousaat~15|Preah Vihear~13|Prey Veaeng~14|Rotanah Kiri~16|Siem Reab~17|Stueng Treng~19|Svaay Rieng~20|Taakaev~21|Tbong Khmum~25"],["Cameroon","CM","Adamaoua~AD|Centre~CE|Est~ES|Extr\xeame-Nord~EN|Littoral~LT|Nord~NO|Nord-Ouest~NW|Ouest~OU|Sud~SU|Sud-Ouest~SW"],["Canada","CA","Alberta~AB|British Columbia~BC|Manitoba~MB|New Brunswick~NB|Newfoundland and Labrador~NL|Northwest Territories~NT|Nova Scotia~NS|Nunavut~NU|Ontario~ON|Prince Edward Island~PE|Quebec~QC|Saskatchewan~SK|Yukon~YT"],["Cape Verde","CV","Boa Vista~BV|Brava~BR|Calheta de S\xe3o Miguel~CS|Maio~MA|Mosteiros~MO|Pa\xfal~PA|Porto Novo~PN|Praia~PR|Ribeira Brava~RB|Ribeira Grande~RG|Sal~SL|Santa Catarina~CA|Santa Cruz~CR|S\xe3o Domingos~SD|S\xe3o Filipe~SF|S\xe3o Nicolau~SN|S\xe3o Vicente~SV|Tarrafal~TA|Tarrafal de S\xe3o Nicolau~TS"],["Cayman Islands","KY","Creek~undefined|Eastern~undefined|Midland~undefined|South Town~undefined|Spot Bay~undefined|Stake Bay~undefined|West End~undefined|Western~undefined"],["Central African Republic","CF","Bamingui-Bangoran~BB|Bangui~BGF|Basse-Kotto~BK|Haute-Kotto~HK|Haut-Mbomou~HM|K\xe9mo~KG|Lobaye~LB|Mamb\xe9r\xe9-Kad\xe9\xef~HS|Mbomou~MB|Nana-Grebizi~10|Nana-Mamb\xe9r\xe9~NM|Ombella-M'Poko~MP|Ouaka~UK|Ouham~AC|Ouham P\xe9nd\xe9~OP|Sangha-Mba\xe9r\xe9~SE|Vakaga~VK"],["Chad","TD","Bahr el Ghazal~BG|Batha~BA|Borkou~BO|Chari-Baguirmi~CB|Ennedi-Est~EE|Ennedi-Ouest~EO|Gu\xe9ra~GR|Hadjer Lamis~HL|Kanem~KA|Lac~LC|Logone Occidental~LO|Logone Oriental~LR|Mondoul~MA|Mayo-K\xe9bbi-Est~ME|Moyen-Chari~MC|Ouaddai~OD|Salamat~SA|Sila~SI|Tandjil\xe9~TA|Tibesti~TI|Ville de Ndjamena~ND|Wadi Fira~WF"],["Chile","CL","Ais\xe9n del General Carlos Ib\xe1\xf1ez del Campo~AI|Antofagasta~AN|Araucan\xeda~AR|Arica y Parinacota~AP|Atacama~AT|B\xedo-B\xedo~BI|Coquimbo~CO|Libertador General Bernardo O'Higgins~LI|Los Lagos~LL|Los R\xedos~LR|Magallanes y Antartica Chilena~MA|Marga-Marga~|Maule~ML|\xd1uble~NB|Regi\xf3n Metropolitana de Santiago~RM|Tarapac\xe1~TA|Valpara\xedso~VS"],["China","CN","Anhui~AH|Beijing~BJ|Chongqing~CQ|Fujian~FJ|Gansu~GS|Guangdong~GD|Guangxi~GX|Guizhou~GZ|Hainan~HI|Hebei~HE|Heilongjiang~HL|Henan~HA|Hong Kong~HK|Hubei~HB|Hunan~HN|Inner Mongolia~NM|Jiangsu~JS|Jiangxi~JX|Jilin~JL|Liaoning~LN|Macau~MO|Ningxia~NX|Qinghai~QH|Shaanxi~SN|Shandong~SD|Shanghai~SH|Shanxi~SX|Sichuan~SC|Tianjin~TJ|Tibet~XZ|Xinjiang~XJ|Yunnan~YN|Zhejiang~ZJ"],["Christmas Island","CX","Christmas Island~CX"],["Cocos (Keeling) Islands","CC","Direction Island~DI|Home Island~HM|Horsburgh Island~HR|North Keeling Island~NK|South Island~SI|West Island~WI"],["Colombia","CO","Amazonas~AMA|Antioquia~ANT|Arauca~ARA|Archipi\xe9lago de San Andr\xe9s~SAP|Atl\xe1ntico~ATL|Bogot\xe1 D.C.~DC|Bol\xedvar~BOL|Boyac\xe1~BOY|Caldas~CAL|Caquet\xe1~CAQ|Casanare~CAS|Cauca~CAU|Cesar~CES|Choc\xf3~CHO|C\xf3rdoba~COR|Cundinamarca~CUN|Guain\xeda~GUA|Guaviare~GUV|Huila~HUI|La Guajira~LAG|Magdalena~MAG|Meta~MET|Nari\xf1o~NAR|Norte de Santander~NSA|Putumayo~PUT|Quind\xedo~QUI|Risaralda~RIS|Santander~SAN|Sucre~SUC|Tolima~TOL|Valle del Cauca~VAC|Vaup\xe9s~VAU|Vichada~VID"],["Comoros","KM","Andjaz\xeedja~G|Andjou\xe2n~A|Mo\xfbh\xeel\xee~M"],["Congo, Republic of the (Brazzaville)","CG","Bouenza~11|Brazzaville~BZV|Cuvette~8|Cuvette-Ouest~15|Kouilou~5|L\xe9koumou~2|Likouala~7|Niari~9|Plateaux~14|Pointe-Noire~16|Pool~12|Sangha~13"],["Congo, the Democratic Republic of the (Kinshasa)","CD","Bandundu~BN|Bas-Congo~BC|\xc9quateur~EQ|Kasa\xef-Occidental~KE|Kasa\xef-Oriental~KW|Katanga~KA|Kinshasa~KN|Maniema~MA|Nord-Kivu~NK|Orientale~OR|Sud-Kivu~SK"],["Cook Islands","CK","Aitutaki~undefined|Atiu~undefined|Avarua~undefined|Mangaia~undefined|Manihiki~undefined|Ma'uke~undefined|Mitiaro~undefined|Nassau~undefined|Palmerston~undefined|Penrhyn~undefined|Pukapuka~undefined|Rakahanga~undefined"],["Costa Rica","CR","Alajuela~2|Cartago~3|Guanacaste~5|Heredia~4|Lim\xf3n~7|Puntarenas~6|San Jos\xe9~1"],["C\xf4te d'Ivoire, Republic of","CI","Agn\xe9by~16|Bafing~17|Bas-Sassandra~09|Dengu\xe9l\xe9~10|Dix-Huit Montagnes~06|Fromager~18|Haut-Sassandra~02|Lacs~07|Lagunes~01|Marahou\xe9~12|Moyen-Cavally~19|Moyen-Como\xe9~05|N'zi-Como\xe9~11|Savanes~03|Sud-Bandama~15|Sud-Como\xe9~13|Vall\xe9e du Bandama~04|Worodougou~14|Zanzan~08"],["Croatia","HR","Bjelovarsko-bilogorska \u017eupanija~07|Brodsko-posavska \u017eupanija~12|Dubrova\u010dko-neretvanska \u017eupanija~19|Grad Zagreb~21|Istarska \u017eupanija~18|Karlova\u010dka \u017eupanija~04|Koprivni\u010dko-kri\u017eeva\u010dka \u017eupanija~06|Krapinsko-zagorska \u017eupanija~02|Li\u010dko-senjska \u017eupanija~09|Me\u0111imurska \u017eupanija~20|Osje\u010dko-baranjska \u017eupanija~14|Po\u017ee\u0161ko-slavonska \u017eupanija~11|Primorsko-goranska \u017eupanija~08|Sisa\u010dko-moslava\u010dka \u017eupanija~03|Splitsko-dalmatinska \u017eupanija~17|\u0160ibensko-kninska \u017eupanija~15|Vara\u017edinska \u017eupanija~05|Viroviti\u010dko-podravska \u017eupanija~10|Vukovarsko-srijemska \u017eupanija~16|Zadarska \u017eupanija~13|Zagreba\u010dka \u017eupanija~01"],["Cuba","CU","Artemisa~15|Camag\xfcey~09|Ciego de \xc1vila~08|Cienfuegos~06|Granma~12|Guant\xe1namo~14|Holgu\xedn~11|Isla de la Juventud~99|La Habana~03|Las Tunas~10|Matanzas~04|Mayabeque~16|Pinar del R\xedo~01|Sancti Sp\xedritus~07|Santiago de Cuba~13|Villa Clara~05"],["Cura\xe7ao","CW","Cura\xe7ao~CW"],["Cyprus","CY","Ammochostos~04|Keryneia~06|Larnaka~03|Lefkosia~01|Lemesos~02|Pafos~05"],["Czech Republic","CZ","Hlavn\xed m\u011bsto Praha~10|Jiho\u010desk\xfd kraj~31|Jihomoravsk\xfd kraj~64|Karlovarsk\xfd kraj~41|Kr\xe1lov\xe9hradeck\xfd kraj~52|Libereck\xfd kraj~51|Moravskoslezsk\xfd kraj~80|Olomouck\xfd kraj~71|Pardubick\xfd kraj~53|Plze\u0148sk\xfd kraj~32|St\u0159edo\u010desk\xfd kraj~20|\xdasteck\xfd kraj~42|Vyso\u010dina~63|Zl\xednsk\xfd kraj~72"],["Denmark","DK","Hovedstaden~DK-84|Midtjylland~DK-82|Nordjylland~DK-81|Sj\xe6lland~DK-85|Syddanmark~DK-83"],["Djibouti","DJ","Ali Sabieh~AS|Arta~AR|Dikhil~DI|Obock~OB|Tadjourah~TA"],["Dominica","DM","Saint Andrew Parish~02|Saint David Parish~03|Saint George Parish~04|Saint John Parish~05|Saint Joseph Parish~06|Saint Luke Parish~07|Saint Mark Parish~08|Saint Patrick Parish~09|Saint Paul Parish~10|Saint Peter Parish~11"],["Dominican Republic","DO","Cibao Central~02|Del Valle~37|Distrito Nacional~01|Enriquillo~38|Norcentral~04|Nordeste~33|Noroeste~34|Norte~35|Valdesia~42"],["Ecuador","EC","Azuay~A|Bol\xedvar~B|Ca\xf1ar~F|Carchi~C|Chimborazo~H|Cotopaxi~X|El Oro~O|Esmeraldas~E|Gal\xe1pagos~W|Guayas~G|Imbabura~I|Loja~L|Los R\xedos~R|Manab\xed~M|Morona-Santiago~S|Napo~N|Orellana~D|Pastaza~Y|Pichincha~P|Santa Elena~SE|Santo Domingo de los Ts\xe1chilas~SD|Sucumb\xedos~U|Tungurahua~T|Zamora-Chinchipe~Z"],["Egypt","EG","Alexandria~ALX|Aswan~ASN|Asyout~AST|Bani Sueif~BNS|Beheira~BH|Cairo~C|Daqahlia~DK|Dumiat~DT|El Bahr El Ahmar~BA|El Ismailia~IS|El Suez~SUZ|El Wadi El Gedeed~WAD|Fayoum~FYM|Gharbia~GH|Giza~GZ|Helwan~HU|Kafr El Sheikh~KFS|Luxor~LX|Matrouh~MT|Menia~MN|Menofia~MNF|North Sinai~SIN|Port Said~PTS|Qalubia~KB|Qena~KN|Sharqia~SHR|Sixth of October~SU|Sohag~SHG|South Sinai~JS"],["El Salvador","SV","Ahuachap\xe1n~AH|Caba\xf1as~CA|Cuscatl\xe1n~CU|Chalatenango~CH|La Libertad~LI|La Paz~PA|La Uni\xf3n~UN|Moraz\xe1n~MO|San Miguel~SM|San Salvador~SS|Santa Ana~SA|San Vicente~SV|Sonsonate~SO|Usulut\xe1n~US"],["Equatorial Guinea","GQ","Annob\xf3n~AN|Bioko Norte~BN|Bioko Sur~BS|Centro Sur~CS|Ki\xe9-Ntem~KN|Litoral~LI|Wele-Nzas~WN"],["Eritrea","ER","Anseba~AN|Debub~DU|Debub-Keih-Bahri~DK|Gash-Barka~GB|Maekel~MA|Semien-Keih-Bahri~SK"],["Estonia","EE","Harjumaa (Tallinn)~37|Hiiumaa (Kardla)~39|Ida-Virumaa (Johvi)~44|J\xe4rvamaa (Paide)~41|J\xf5gevamaa (Jogeva)~49|L\xe4\xe4nemaa~57|L\xe4\xe4ne-Virumaa (Rakvere)~59|P\xe4rnumaa (Parnu)~67|P\xf5lvamaa (Polva)~65|Raplamaa (Rapla)~70|Saaremaa (Kuessaare)~74|Tartumaa (Tartu)~78|Valgamaa (Valga)~82|Viljandimaa (Viljandi)~84|V\xf5rumaa (Voru)~86"],["Ethiopia","ET","Addis Ababa~AA|Afar~AF|Amhara~AM|Benshangul-Gumaz~BE|Dire Dawa~DD|Gambela~GA|Harari~HA|Oromia~OR|Somali~SO|Southern Nations Nationalities and People's Region~SN|Tigray~TI"],["Falkland Islands (Islas Malvinas)","FK","Falkland Islands (Islas Malvinas)~undefined"],["Faroe Islands","FO","Bordoy~undefined|Eysturoy~undefined|Mykines~undefined|Sandoy~undefined|Skuvoy~undefined|Streymoy~undefined|Suduroy~undefined|Tvoroyri~undefined|Vagar~undefined"],["Fiji","FJ","Ba~01|Bua~02|Cakaudrove~03|Kadavu~04|Lau~05|Lomaiviti~06|Macuata~07|Nadroga and Navosa~08|Naitasiri~09|Namosi~10|Ra~11|Rewa~12|Rotuma~R|Serua~13|Tailevu~14"],["Finland","FI","Ahvenanmaan maakunta~FI-01|Etel\xe4-Karjala~FI-02|Etel\xe4-Pohjanmaa~FI-03|Etel\xe4-Savo~FI-04|Kainuu~FI-05|Kanta-H\xe4me~FI-06|Keski-Pohjanmaa~FI-07|Keski-Suomi~FI-08|Kymenlaakso~FI-09|Lappi~FI-10|Pirkanmaa~FI-11|Pohjanmaa~FI-12|Pohjois-Karjala~FI-13|Pohjois-Pohjanmaa~FI-14|Pohjois-Savo~FI-15|P\xe4ij\xe4t-H\xe4me~FI-16|Satakunta~FI-17|Uusimaa~FI-18|Varsinais-Suomi~FI-19"],["France","FR","Auvergne-Rh\xf4ne-Alpes~ARA|Bourgogne-Franche-Comt\xe9~BFC|Bretagne~BRE|Centre-Val de Loire~CVL|Corse~COR|Grand Est~GES|Hauts-de-France~HDF|\xcele-de-France~IDF|Normandie~NOR|Nouvelle-Aquitaine~NAQ|Occitanie~OCC|Pays de la Loire~PDL|Provence-Alpes-Cote d'Azur~PAC|Clipperton~CP|Guadeloupe~GP|Guyane~GF|Martinique~MQ|Mayotte~YT|Nouvelle-Cal\xe9donie~NC|Polyn\xe9sie~PF|Saint-Pierre-et-Miquelon~PM|Saint Barth\xe9lemy~BL|Saint Martin~MF|R\xe9union~RE|Terres Australes Fran\xe7aises~TF|Wallis-et-Futuna~WF"],["French Guiana","GF","French Guiana~undefined"],["French Polynesia","PF","Archipel des Marquises~undefined|Archipel des Tuamotu~undefined|Archipel des Tubuai~undefined|Iles du Vent~undefined|Iles Sous-le-Vent~undefined"],["French Southern and Antarctic Lands","TF","Adelie Land~undefined|Ile Crozet~undefined|Iles Kerguelen~undefined|Iles Saint-Paul et Amsterdam~undefined"],["Gabon","GA","Estuaire~1|Haut-Ogoou\xe9~2|Moyen-Ogoou\xe9~3|Ngouni\xe9~4|Nyanga~5|Ogoou\xe9-Ivindo~6|Ogoou\xe9-Lolo~7|Ogoou\xe9-Maritime~8|Woleu-Ntem~9"],["Gambia, The","GM","Banjul~B|Central River~M|Lower River~L|North Bank~N|Upper River~U|Western~W"],["Georgia","GE","Abkhazia (Sokhumi)~AB|Ajaria (Bat'umi)~AJ|Guria~GU|Imereti~IM|K'akheti~KA|Kvemo Kartli~KK|Mtshkheta-Mtianeti~MM|Rach'a-Lexhkumi-KvemoSvaneti~RL|Samegrelo-Zemo Svaneti~SZ|Samtskhe-Javakheti~SJ|Shida Kartli~SK|Tbilisi~TB"],["Germany","DE","Baden-W\xfcrttemberg~BW|Bayern~BY|Berlin~BE|Brandenburg~BB|Bremen~HB|Hamburg~HH|Hessen~HE|Mecklenburg-Vorpommern~MV|Niedersachsen~NI|Nordrhein-Westfalen~NW|Rheinland-Pfalz~RP|Saarland~SL|Sachsen~SN|Sachsen-Anhalt~ST|Schleswig-Holstein~SH|Th\xfcringen~TH"],["Ghana","GH","Ahafo~undefined|Ashanti~AH|Bono~undefined|Bono East~undefined|Central~CP|Eastern~EP|Greater Accra~AA|Northern~NP|North East~undefined|Oti~undefined|Savannah~undefined|Upper East~UE|Upper West~UW|Volta~TV|Western~WP|Western North~undefined"],["Gibraltar","GI","Gibraltar~undefined"],["Greece","GR","Anatolik\xed Makedon\xeda kai Thr\xe1ki~A|Attik\u1e2f~I|Dytik\xed Ell\xe1da~G|Dytik\xed Makedon\xeda~C|Ion\xeda N\xedsia~F|Kentrik\xed Makedon\xeda~B|Kr\xedt\xed~M|Not\xedo Aiga\xedo~L|Peloponn\xedsos~J|Stere\xe1 Ell\xe1da~H|Thessal\xeda~E|Vore\xedo Aiga\xedo~K|\xcdpeiros~D|\xc1gion \xd3ros~69"],["Greenland","GL","Kommune Kujalleq~KU|Kommuneqarfik Sermersooq~SM|Qaasuitsup Kommunia~QA|Qeqqata Kommunia~QE"],["Grenada","GD","Saint Andrew~01|Saint David~02|Saint George~03|Saint John~04|Saint Mark~05|Saint Patrick~06|Southern Grenadine Islands~10"],["Guadeloupe","GP","Guadeloupe~undefined"],["Guam","GU","Guam~undefined"],["Guatemala","GT","Alta Verapaz~AV|Baja Verapaz~BV|Chimaltenango~CM|Chiquimula~CQ|El Progreso~PR|Escuintla~ES|Guatemala~GU|Huehuetenango~HU|Izabal~IZ|Jalapa~JA|Jutiapa~JU|Pet\xe9n~PE|Quetzaltenango~QZ|Quich\xe9~QC|Retalhuleu~Re|Sacatep\xe9quez~SA|San Marcos~SM|Santa Rosa~SR|Solol\xe1~SO|Suchitep\xe9quez~SU|Totonicap\xe1n~TO|Zacapa~ZA"],["Guernsey","GG","Castel~undefined|Forest~undefined|St. Andrew~undefined|St. Martin~undefined|St. Peter Port~undefined|St. Pierre du Bois~undefined|St. Sampson~undefined|St. Saviour~undefined|Torteval~undefined|Vale~undefined"],["Guinea","GN","Bok\xe9~B|Conakry~C|Faranah~F|Kankan~K|Kindia~D|Lab\xe9~L|Mamou~M|Nz\xe9r\xe9kor\xe9~N"],["Guinea-Bissau","GW","Bafat\xe1~BA|Biombo~BM|Bissau~BS|Bolama-Bijagos~BL|Cacheu~CA|Gab\xfa~GA|Oio~OI|Quinara~QU|Tombali~TO"],["Guyana","GY","Barima-Waini~BA|Cuyuni-Mazaruni~CU|Demerara-Mahaica~DE|East Berbice-Corentyne~EB|Essequibo Islands-West Demerara~ES|Mahaica-Berbice~MA|Pomeroon-Supenaam~PM|Potaro-Siparuni~PT|Upper Demerara-Berbice~UD|Upper Takutu-Upper Essequibo~UT"],["Haiti","HT","Artibonite~AR|Centre~CE|Grand'Anse~GA|Nippes~NI|Nord~ND|Nord-Est~NE|Nord-Ouest~NO|Ouest~OU|Sud~SD|Sud-Est~SE"],["Heard Island and McDonald Islands","HM","Heard Island and McDonald Islands~undefined"],["Holy See (Vatican City)","VA","Holy See (Vatican City)~01"],["Honduras","HN","Atl\xe1ntida~AT|Choluteca~CH|Col\xf3n~CL|Comayagua~CM|Cop\xe1n~CP|Cort\xe9s~CR|El Para\xedso~EP|Francisco Moraz\xe1n~FM|Gracias a Dios~GD|Intibuc\xe1~IN|Islas de la Bah\xeda~IB|La Paz~LP|Lempira~LE|Ocotepeque~OC|Olancho~OL|Santa B\xe1rbara~SB|Valle~VA|Yoro~YO"],["Hong Kong","HK","Hong Kong~HK"],["Hungary","HU","B\xe1cs-Kiskun~BK|Baranya~BA|B\xe9k\xe9s~BE|B\xe9k\xe9scsaba~BC|Borsod-Abauj-Zemplen~BZ|Budapest~BU|Csongr\xe1d~CS|Debrecen~DE|Duna\xfajv\xe1ros~DU|Eger~EG|\xc9rd~ER|Fej\xe9r~FE|Gy\u0151r~GY|Gy\u0151r-Moson-Sopron~GS|Hajd\xfa-Bihar~HB|Heves~HE|H\xf3dmez\u0151v\xe1s\xe1rhely~HV|J\xe1sz-Nagykun-Szolnok~N|Kaposv\xe1r~KV|Kecskem\xe9t~KM|Kom\xe1rom-Esztergom~KE|Miskolc~MI|Nagykanizsa~NK|N\xf3gr\xe1d~NO|Ny\xedregyh\xe1za~NY|P\xe9cs~PS|Pest~PE|Salg\xf3tarj\xe1n~ST|Somogy~SO|Sopron~SN|Szabolcs-\xe1-Bereg~SZ|Szeged~SD|Sz\xe9kesfeh\xe9rv\xe1r~SF|Szeksz\xe1rd~SS|Szolnok~SK|Szombathely~SH|Tatab\xe1nya~TB|Tolna~TO|Vas~VA|Veszpr\xe9m~VE|Veszpr\xe9m (City)~VM|Zala~ZA|Zalaegerszeg~ZE"],["Iceland","IS","Austurland~7|H\xf6fu\xf0borgarsv\xe6\xf0i~1|Nor\xf0urland eystra~6|Nor\xf0urland vestra~5|Su\xf0urland~8|Su\xf0urnes~2|Vestfir\xf0ir~4|Vesturland~3"],["India","IN","Andaman and Nicobar Islands~AN|Andhra Pradesh~AP|Arunachal Pradesh~AR|Assam~AS|Bihar~BR|Chandigarh~CH|Chhattisgarh~CT|Dadra and Nagar Haveli and Daman and Diu~DH|Delhi~DL|Goa~GA|Gujarat~GJ|Haryana~HR|Himachal Pradesh~HP|Jammu and Kashmir~JK|Jharkhand~JH|Karnataka~KA|Kerala~KL|Ladakh~LA|Lakshadweep~LD|Madhya Pradesh~MP|Maharashtra~MH|Manipur~MN|Meghalaya~ML|Mizoram~MZ|Nagaland~NL|Odisha~OR|Puducherry~PY|Punjab~PB|Rajasthan~RJ|Sikkim~SK|Tamil Nadu~TN|Telangana~TG|Tripura~TR|Uttarakhand~UT|Uttar Pradesh~UP|West Bengal~WB"],["Indonesia","ID","Aceh~AC|Bali~BA|Bangka Belitung~BB|Banten~BT|Bengkulu~BE|Gorontalo~GO|Jakarta Raya~JK|Jambi~JA|Jawa Barat~JB|Jawa Tengah~JT|Jawa Timur~JI|Kalimantan Barat~KB|Kalimantan Selatan~KS|Kalimantan Tengah~KT|Kalimantan Timur~KI|Kalimantan Utara~KU|Kepulauan Riau~KR|Lampung~LA|Maluku~MA|Maluku Utara~MU|Nusa Tenggara Barat~NB|Nusa Tenggara Timur~NT|Papua~PA|Papua Barat~PB|Riau~RI|Sulawesi Selatan~SR|Sulawesi Tengah~ST|Sulawesi Tenggara~SG|Sulawesi Utara~SA|Sumatera Barat~SB|Sumatera Selatan~SS|Sumatera Utara~SU|Yogyakarta~YO"],["Iran, Islamic Republic of","IR","Alborz~32|Ardab\u012bl~03|\u0100z\u0304arb\u0101yj\u0101n-e Gharb\u012b~02|\u0100z\u0304arb\u0101yj\u0101n-e Sharq\u012b~01|B\u016bshehr~06|Chah\u0101r Ma\u1e29\u0101l va Bakht\u012b\u0101r\u012b~08|E\u015ffah\u0101n~04|F\u0101rs~14|G\u012bl\u0101n~19|Golest\u0101n~27|Hamad\u0101n~24|Hormozg\u0101n~23|\u012al\u0101m~05|Kerm\u0101n~15|Kerm\u0101nsh\u0101h~17|Khor\u0101s\u0101n-e Jon\u016bb\u012b~29|Khor\u0101s\u0101n-e Ra\u1e95av\u012b~30|Khor\u0101s\u0101n-e Shom\u0101l\u012b~61|Kh\u016bzest\u0101n~10|Kohg\u012bl\u016byeh va Bowyer A\u1e29mad~18|Kordest\u0101n~16|Lorest\u0101n~20|Markazi~22|M\u0101zandar\u0101n~21|Qazv\u012bn~28|Qom~26|Semn\u0101n~12|S\u012bst\u0101n va Bal\u016bchest\u0101n~13|Tehr\u0101n~07|Yazd~25|Zanj\u0101n~11"],["Iraq","IQ","Al Anb\u0101r~AN|Al Ba\u015frah~BA|Al Muthann\xe1~MU|Al Q\u0101dis\u012byah~QA|An Najaf~NA|Arb\u012bl~AR|As Sulaym\u0101n\u012byah~SU|B\u0101bil~BB|Baghd\u0101d~BG|Dohuk~DA|Dh\u012b Q\u0101r~DQ|Diy\u0101l\xe1~DI|Karbal\u0101'~KA|Kirkuk~KI|Mays\u0101n~MA|N\u012bnaw\xe1~NI|\u015eal\u0101\u1e29 ad D\u012bn~SD|W\u0101si\u0163~WA"],["Ireland","IE","Carlow~CW|Cavan~CN|Clare~CE|Cork~CO|Donegal~DL|Dublin~D|Galway~G|Kerry~KY|Kildare~KE|Kilkenny~KK|Laois~LS|Leitrim~LM|Limerick~LK|Longford~LD|Louth~LH|Mayo~MO|Meath~MH|Monaghan~MN|Offaly~OY|Roscommon~RN|Sligo~SO|Tipperary~TA|Waterford~WD|Westmeath~WH|Wexford~WX|Wicklow~WW"],["Isle of Man","IM","Isle of Man~undefined"],["Israel","IL","HaDarom~D|HaMerkaz~M|HaTsafon~Z|H\u0331efa~HA|Tel-Aviv~TA|Yerushalayim~JM"],["Italy","IT","Abruzzo~65|Basilicata~77|Calabria~78|Campania~72|Emilia-Romagna~45|Friuli-Venezia Giulia~36|Lazio~62|Liguria~42|Lombardia~25|Marche~57|Molise~67|Piemonte~21|Puglia~75|Sardegna~88|Sicilia~82|Toscana~52|Trentino-Alto Adige~32|Umbria~55|Valle d'Aosta~23|Veneto~34"],["Jamaica","JM","Clarendon~13|Hanover~09|Kingston~01|Manchester~12|Portland~04|Saint Andrew~02|Saint Ann~06|Saint Catherine~14|Saint Elizabeth~11|Saint James~08|Saint Mary~05|Saint Thomas~03|Trelawny~07|Westmoreland~10"],["Japan","JP","Aichi~23|Akita~05|Aomori~02|Chiba~12|Ehime~38|Fukui~18|Fukuoka~40|Fukushima~07|Gifu~21|Gunma~10|Hiroshima~34|Hokkaido~01|Hyogo~28|Ibaraki~08|Ishikawa~17|Iwate~03|Kagawa~37|Kagoshima~46|Kanagawa~14|Kochi~39|Kumamoto~43|Kyoto~26|Mie~24|Miyagi~04|Miyazaki~45|Nagano~20|Nagasaki~42|Nara~29|Niigata~15|Oita~44|Okayama~33|Okinawa~47|Osaka~27|Saga~41|Saitama~11|Shiga~25|Shimane~32|Shizuoka~22|Tochigi~09|Tokushima~36|Tokyo~13|Tottori~31|Toyama~16|Wakayama~30|Yamagata~06|Yamaguchi~35|Yamanashi~19"],["Jersey","JE","Jersey~undefined"],["Jordan","JO","\u2018Ajl\u016bn~AJ|Al 'Aqabah~AQ|Al Balq\u0101\u2019~BA|Al Karak~KA|Al Mafraq~MA|Al \u2018A\u0305\u015fimah~AM|A\u0163 \u0162af\u012blah~AT|Az Zarq\u0101\u2019~AZ|Irbid~IR|Jarash~JA|Ma\u2018\u0101n~MN|M\u0101dab\u0101~MD"],["Kazakhstan","KZ","Almaty~ALA|Aqmola~AKM|Aqtobe~AKT|Astana~AST|Atyrau~ATY|Batys Qazaqstan~ZAP|Bayqongyr~undefined|Mangghystau~MAN|Ongtustik Qazaqstan~YUZ|Pavlodar~PAV|Qaraghandy~KAR|Qostanay~KUS|Qyzylorda~KZY|Shyghys Qazaqstan~VOS|Soltustik Qazaqstan~SEV|Zhambyl~ZHA"],["Kenya","KE","Baringo~01|Bomet~02|Bungoma~03|Busia~04|Eleyo/Marakwet~05|Embu~06|Garissa~07|Homa Bay~08|Isiolo~09|Kajiado~10|Kakamega~11|Kericho~12|Kiambu~13|Kilifi~14|Kirinyaga~15|Kisii~16|Kisumu~17|Kitui~18|Kwale~19|Laikipia~20|Lamu~21|Machakos~22|Makueni~23|Mandera~24|Marsabit~25|Meru~26|Migori~27|Mombasa~28|Murang'a~29|Nairobi City~30|Nakuru~31|Nandi~32|Narok~33|Nyamira~34|Nyandarua~35|Nyeri~36|Samburu~37|Siaya~38|Taita/Taveta~39|Tana River~40|Tharaka-Nithi~41|Trans Nzoia~42|Turkana~43|Uasin Gishu~44|Vihiga~45|Wajir~46|West Pokot~47"],["Kiribati","KI","Abaiang~undefined|Abemama~undefined|Aranuka~undefined|Arorae~undefined|Banaba~undefined|Beru~undefined|Butaritari~undefined|Central Gilberts~undefined|Gilbert Islands~G|Kanton~undefined|Kiritimati~undefined|Kuria~undefined|Line Islands~L|Maiana~undefined|Makin~undefined|Marakei~undefined|Nikunau~undefined|Nonouti~undefined|Northern Gilberts~undefined|Onotoa~undefined|Phoenix Islands~P|Southern Gilberts~undefined|Tabiteuea~undefined|Tabuaeran~undefined|Tamana~undefined|Tarawa~undefined|Teraina~undefined"],["Korea, Democratic People's Republic of","KP","Chagang-do (Chagang Province)~04|Hamgyong-bukto (North Hamgyong Province)~09|Hamgyong-namdo (South Hamgyong Province)~08|Hwanghae-bukto (North Hwanghae Province)~06|Hwanghae-namdo (South Hwanghae Province)~05|Kangwon-do (Kangwon Province)~07|Nas\u014fn (Najin-S\u014fnbong)~13|P'yongan-bukto (North P'yongan Province)~03|P'yongan-namdo (South P'yongan Province)~02|P'yongyang-si (P'yongyang City)~01|Yanggang-do (Yanggang Province)~10"],["Korea, Republic of","KR","Chungcheongbuk-do~43|Chungcheongnam-do~44|Jeju-teukbyeoljachido~49|Jeollabuk-do~45|Jeollanam-do~46|Incheon-gwangyeoksi~28|Gangwon-do~42|Gwangju-gwangyeoksi~29|Gyeonggi-do~41|Gyeongsangbuk-do~47|Gyeongsangnam-do~48|Busan-gwangyeoksi~26|Seoul-teukbyeolsi~11|Sejong-teukbyeoljachisi~50|Daegu-gwangyeoksi~27|Daejeon-gwangyeoksi~30|Ulsan-gwangyeoksi~31"],["Kosovo","XK","Farizaj~FZ|Gjakova~GK|Gjilan~GL|Mitrovica~MI|Peja/Pe\u0107~PE|Pristina~PR|Prizren~PZ"],["Kuwait","KW","Al A\u1e29madi~AH|Al Farw\u0101n\u012byah~FA|Al Jahr\u0101\u2019~JA|Al \u2018\u0100\u015fimah~KU|\u1e28awall\u012b~HA|Mub\u0101rak al Kabir~MU"],["Kyrgyzstan","KG","Batken Oblasty~B|Bishkek Shaary~GB|Chuy Oblasty (Bishkek)~C|Jalal-Abad Oblasty~J|Naryn Oblasty~N|Osh Oblasty~O|Talas Oblasty~T|Ysyk-Kol Oblasty (Karakol)~Y"],["Laos","LA","Attapu~AT|Bok\xe8o~BK|Bolikhamxai~BL|Champasak~CH|Houaphan~HO|Khammouan~KH|Louang Namtha~LM|Louangphabang~LP|Oud\xf4mxai~OU|Ph\xf4ngsali~PH|Salavan~SL|Savannakh\xe9t~SV|Vientiane~VI|Xaignabouli~XA|X\xe9kong~XE|Xaisomboun~XS|Xiangkhouang~XI"],["Latvia","LV","Aglona~001|Aizkraukle~002|Aizpute~003|Akn\u012bste~004|Aloja~005|Alsunga~06|Al\u016bksne~007|Amata~008|Ape~009|Auce~010|\u0100da\u017ei~011|Bab\u012bte~012|Baldone~013|Baltinava~014|Balvi~015|Bauska~016|Bever\u012bna~017|Broc\u0113ni~018|Burtnieki~019|Carnikava~020|Cesvaine~021|C\u0113sis~022|Cibla~023|Dagda~024|Daugavpils~025|Daugavpils (City)~DGV|Dobele~026|Dundaga~027|Durbe~028|Engure~029|\u0112rg\u013ci~030|Garkalne~031|Grobi\u0146a~032|Gulbene~033|Iecava~034|Ik\u0161\u0137ile~035|Il\u016bkste~036|In\u010dukalns~037|Jaunjelgava~038|Jaunpiebalga~039|Jaunpils~040|Jelgava~041|Jelgava (City)~JEL|J\u0113kabpils~042|J\u0113kabpils (City)~JKB|J\u016brmala (City)~JUR|Kandava~043|K\u0101rsava~044|Koc\u0113ni~045|Koknese~046|Kr\u0101slava~047|Krimulda~048|Krustpils~049|Kuld\u012bga~050|\u0136egums~051|\u0136ekava~052|Lielv\u0101rde~053|Liep\u0101ja~LPX|Limba\u017ei~054|L\u012bgatne~055|L\u012bv\u0101ni~056|Lub\u0101na~057|Ludza~058|Madona~059|Mazsalaca~060|M\u0101lpils~061|M\u0101rupe~062|M\u0113rsrags~063|Nauk\u0161\u0113ni~064|Nereta~065|N\u012bca~066|Ogre~067|Olaine~068|Ozolnieki~069|P\u0101rgauja~070|P\u0101vilosta~071|P\u013cavi\u0146as~072|Prei\u013ci~073|Priekule~074|Prieku\u013ci~075|Rauna~076|R\u0113zekne~077|R\u0113zekne (City)~REZ|Riebi\u0146i~078|R\u012bga~RIX|Roja~079|Ropa\u017ei~080|Rucava~081|Rug\u0101ji~082|Rund\u0101le~083|R\u016bjiena~084|Sala~085|Salacgr\u012bva~086|Salaspils~087|Saldus~088|Saulkrasti~089|S\u0113ja~090|Sigulda~091|Skr\u012bveri~092|Skrunda~093|Smiltene~094|Stopi\u0146i~095|Stren\u010di~096|Talsi~097|T\u0113rvete~098|Tukums~099|Vai\u0146ode~100|Valka~101|Valmiera~VMR|Varak\u013c\u0101ni~102|V\u0101rkava~103|Vecpiebalga~104|Vecumnieki~105|Ventspils~106|Ventspils (City)~VEN|Vies\u012bte~107|Vi\u013caka~108|Vi\u013c\u0101ni~109|Zilupe~110"],["Lebanon","LB","Aakk\xe2r~AK|Baalbelk-Hermel~BH|B\xe9qaa~BI|Beyrouth~BA|Liban-Nord~AS|Liban-Sud~JA|Mont-Liban~JL|Nabat\xeey\xe9~NA"],["Lesotho","LS","Berea~D|Butha-Buthe~B|Leribe~C|Mafeteng~E|Maseru~A|Mohales Hoek~F|Mokhotlong~J|Qacha's Nek~H|Quthing~G|Thaba-Tseka~K"],["Liberia","LR","Bomi~BM|Bong~BG|Gbarpolu~GP|Grand Bassa~GB|Grand Cape Mount~CM|Grand Gedeh~GG|Grand Kru~GK|Lofa~LO|Margibi~MG|Maryland~MY|Montserrado~MO|Nimba~NI|River Cess~RI|River Geee~RG|Sinoe~SI"],["Libya","LY","Al Bu\u0163n\u0101n~BU|Al Jabal al Akh\u1e11ar~JA|Al Jabal al Gharb\u012b~JG|Al Jaf\u0101rah~JI|Al Jufrah~JU|Al Kufrah~FK|Al Marj~MJ|Al Marquab~MB|Al W\u0101\u1e29\u0101t~WA|An Nuqa\u0163 al Khams~NQ|Az Z\u0101wiyah~ZA|Bangh\u0101z\u012b~BA|Darnah~DR|Gh\u0101t~GH|Mi\u015fr\u0101tah~MI|Murzuq~MQ|N\u0101l\u016bt~NL|Sabh\u0101~SB|Surt~SR|\u0162ar\u0101bulus~TB|Yafran~WD|W\u0101d\u012b ash Sh\u0101\u0163i\u02be~WS"],["Liechtenstein","LI","Balzers~01|Eschen~02|Gamprin~03|Mauren~04|Planken~05|Ruggell~06|Schaan~07|Schellenberg~08|Triesen~09|Triesenberg~10|Vaduz~11"],["Lithuania","LT","Alytaus~AL|Kauno~KU|Klaip\u0117dos~KL|Marijampol\u0117s~MR|Panev\u0117\u017eio~PN|\u0160iauli\u0173~SA|Taurag\u0117s~TA|Tel\u0161i\u0173~TE|Utenos~UT|Vilniaus~VL"],["Luxembourg","LU","Capellen~CA|Clevaux~CL|Diekirch~DI|Echternach~EC|Esch-sur-Alzette~ES|Grevenmacher~GR|Luxembourg~LU|Mersch~ME|Redange~RD|Remich~RM|Vianden~VD|Wiltz~WI"],["Macao","MO","Macao~undefined"],["Macedonia, Republic of","MK","Ara\u010dinovo~02|Berovo~03|Bitola~04|Bogdanci~05|Bogovinje~06|Bosilovo~07|Brvenica~08|Centar \u017dupa~78|\u010ca\u0161ka~80|\u010ce\u0161inovo-Oble\u0161evo~81|\u010cu\u010der Sandevo~82|Debar~21|Debarca~22|Del\u010devo~23|Demir Hisar~25|Demir Kapija~24|Doran~26|Dolneni~27|Gevgelija~18|Gostivar~19|Gradsko~20|Ilinden~34|Jegunovce~35|Karbinci~37|Kavadarci~36|Ki\u010devo~40|Ko\u010dani~42|Kon\u010de~41|Kratovo~43|Kriva Palanka~44|Krivoga\u0161tani~45|Kru\u0161evo~46|Kumanovo~47|Lipkovo~48|Lozovo~49|Makedonska Kamenica~51|Makedonski Brod~52|Mavrovo i Rostu\u0161a~50|Mogila~53|Negotino~54|Novaci~55|Novo Selo~56|Ohrid~58|Peh\u010devo~60|Petrovec~59|Plasnica~61|Prilep~62|Probi\u0161tip~63|Radovi\u0161~|Rankovce~65|Resen~66|Rosoman~67|Skopje~85|Sopi\u0161te~70|Staro Nagori\u010dane~71|Struga~72|Strumica~73|Studeni\u010dani~74|Sveti Nikole~69|\u0160tip~83|Tearce~75|Tetovo~76|Valandovo~10|Vasilevo~11|Veles~13|Vev\u010dani~12|Vinica~14|Vrap\u010di\u0161te~16|Zelenikovo~32|Zrnovci~33|\u017delino~30"],["Madagascar","MG","Antananarivo~T|Antsiranana~D|Fianarantsoa~F|Mahajanga~M|Toamasina~A|Toliara~U"],["Malawi","MW","Balaka~BA|Blantyre~BL|Chikwawa~CK|Chiradzulu~CR|Chitipa~CT|Dedza~DE|Dowa~DO|Karonga~KR|Kasungu~KS|Likoma~LK|Lilongwe~LI|Machinga~MH|Mangochi~MG|Mchinji~MC|Mulanje~MU|Mwanza~MW|Mzimba~MZ|Nkhata Bay~NE|Nkhotakota~NB|Nsanje~NS|Ntcheu~NU|Ntchisi~NI|Phalombe~PH|Rumphi~RU|Salima~SA|Thyolo~TH|Zomba~ZO"],["Malaysia","MY","Johor~01|Kedah~02|Kelantan~03|Melaka~04|Negeri Sembilan~05|Pahang~06|Perak~08|Perlis~09|Pulau Pinang~07|Sabah~12|Sarawak~13|Selangor~10|Terengganu~11|Wilayah Persekutuan (Kuala Lumpur)~14|Wilayah Persekutuan (Labuan)~15|Wilayah Persekutuan (Putrajaya)~16"],["Maldives","MV","Alifu Alifu~02|Alifu Dhaalu~00|Baa~20|Dhaalu~17|Faafu~14|Gaafu Alifu~27|Gaafu Dhaalu~28|Gnaviyani~29|Haa Alifu~07|Haa Dhaalu~23|Kaafu~26|Laamu~05|Lhaviyani~03|Mal\xe9~MLE|Meemu~12|Noonu~25|Raa~13|Seenu~01|Shaviyani~24|Thaa~08|Vaavu~04"],["Mali","ML","Bamako~BKO|Gao~7|Kayes~1|Kidal~8|Koulikoro~2|Mopti~5|Segou~4|Sikasso~3|Tombouctou~6|Taoud\xe9nit~9|M\xe9naka~10"],["Malta","MT","Attard~01|Balzan~02|Birgu~03|Birkirkara~04|Bir\u017cebbu\u0121a~05|Bormla~06|Dingli~07|Fgura~08|Floriana~09|Fontana~10|Guda~11|G\u017cira~12|G\u0127ajnsielem~13|G\u0127arb~14|G\u0127arg\u0127ur~15|G\u0127asri~16|G\u0127axaq~17|\u0126amrun~18|Iklin~19|Isla~20|Kalkara~21|Ker\u010bem~22|Kirkop~23|Lija~24|Luqa~25|Marsa~26|Marsaskala~27|Marsaxlokk~28|Mdina~29|Mellie\u0127a~30|M\u0121arr~31|Mosta~32|Mqabba~33|Msida~34|Mtarfa~35|Munxar~36|Nadur~37|Naxxar~38|Paola~39|Pembroke~40|Piet\xe0~41|Qala~42|Qormi~43|Qrendi~44|Rabat G\u0127awdex~45|Rabat Malta~46|Safi~47|San \u0120iljan~48|San \u0120wann~49|San Lawrenz~50|San Pawl il-Ba\u0127ar~51|Sannat~52|Santa Lu\u010bija~53|Santa Venera~54|Si\u0121\u0121iewi~55|Sliema~56|Swieqi~57|Tai Xbiex~58|Tarzien~59|Valletta~60|Xag\u0127ra~61|Xewkija~62|Xg\u0127ajra~63|\u017babbar~64|\u017bebbu\u0121 G\u0127awde~65|\u017bebbu\u0121 Malta~66|\u017bejtun~67|\u017burrieq~68"],["Marshall Islands","MH","Ailinglaplap~ALL|Ailuk~ALK|Arno~ARN|Aur~AUR|Bikini and Kili~KIL|Ebon~EBO|Jabat~JAB|Jaluit~JAL|Kwajalein~KWA|Lae~LAE|Lib~LIB|Likiep~LIK|Majuro~MAJ|Maloelap~MAL|Mejit~MEJ|Namdrik~NMK|Namu~NMU|Rongelap~RON|Ujae~UJA|Utrik~UTI|Wotho~WTH|Wotje~WTJ"],["Martinique","MQ","Martinique~undefined"],["Mauritania","MR","Adrar~07|Assaba~03|Brakna~05|Dakhlet Nouadhibou~08|Gorgol~04|Guidimaka~10|Hodh Ech Chargui~01|Hodh El Gharbi~02|Inchiri~12|Nouakchott Nord~14|Nouakchott Ouest~13|Nouakchott Sud~15|Tagant~09|Tiris Zemmour~11|Trarza~06"],["Mauritius","MU","Agalega Islands~AG|Beau Bassin-Rose Hill~BR|Black River~BL|Cargados Carajos Shoals~CC|Curepipe~CU|Flacq~FL|Grand Port~GP|Moka~MO|Pamplemousses~PA|Plaines Wilhems~PW|Port Louis (City)~PU|Port Louis~PL|Riviere du Rempart~RR|Rodrigues Island~RO|Savanne~SA|Vacoas-Phoenix~CP"],["Mayotte","YT","Dzaoudzi~01|Pamandzi~02|Mamoudzou~03|Dembeni~04|Bandr\xe9l\xe9~05|Kani-K\xe9li~06|Bou\xe9ni~07|Chirongui~08|Sada~09|Ouangani~10|Chiconi~11|Tsingoni~12|M'Tsangamouji~13|Acoua~14|Mtsamboro~15|Bandraboua~16|Koungou~17"],["Mexico","MX","Aguascalientes~AGU|Baja California~BCN|Baja California Sur~BCS|Campeche~CAM|Ciudad de M\xe9xico~CMX|Chiapas~CHP|Chihuahua~CHH|Coahuila de Zaragoza~COA|Colima~COL|Durango~DUR|Estado de M\xe9xico~MEX|Guanajuato~GUA|Guerrero~GRO|Hidalgo~HID|Jalisco~JAL|Michoac\xe1n de Ocampo~MIC|Morelos~MOR|Nayarit~NAY|Nuevo Le\xf3n~NLE|Oaxaca~OAX|Puebla~PUE|Quer\xe9taro de Arteaga~QUE|Quintana Roo~ROO|San Luis Potos\xed~SLP|Sinaloa~SIN|Sonora~SON|Tabasco~TAB|Tamaulipas~TAM|Tlaxcala~TLA|Veracruz~VER|Yucat\xe1n~YUC|Zacatecas~ZAC"],["Micronesia, Federated States of","FM","Chuuk (Truk)~TRK|Kosrae~KSA|Pohnpei~PNI|Yap~YAP"],["Moldova","MD","Aenii Noi~AN|Basarabeasca~BS|B\u0103l\u021bi~BA|Bender~BD|Briceni~BR|Cahul~CA|Cantemir~CT|C\u0103l\u0103ra\u0219i~CL|C\u0103u\u0219eni~CS|Chi\u0219in\u0103u~CU|Cimi\u0219lia~CM|Criuleni~CR|Dondu\u0219eni~DO|Drochia~DR|Dub\u0103sari~DU|Edine\u021b~ED|F\u0103le\u0219ti~FA|Flore\u0219ti~FL|G\u0103g\u0103uzia~GA|Glodeni~GL|H\xeence\u0219ti~HI|Ialoveni~IA|Leova~LE|Nisporeni~NI|Ocni\u021ba~OC|Orhei~OR|Rezina~RE|R\xee\u0219cani~RI|S\xeengerei~SI|Soroca~SO|St\xe2nga Nistrului~SN|Str\u0103\u0219eni~ST|\u0218old\u0103ne\u0219ti~SD|\u0218tefan Vod\u0103~SV|Taraclia~TA|Telene\u0219ti~TE|Ungheni~UN"],["Monaco","MC","Colle~CL|Condamine~CO|Fontvieille~FO|Gare~GA|Jardin Exotique~JE|Larvotto~LA|Malbousquet~MA|Monaco-Ville~MO|Moneghetti~MG|Monte-Carlo~MC|Moulins~MU|Port-Hercule~PH|Saint-Roman~SR|Sainte-D\xe9vote~SD|Source~SO|Sp\xe9lugues~SP|Vallon de la Rousse~VR"],["Mongolia","MN","Arhangay~073|Bayan-Olgiy~071|Bayanhongor~069|Bulgan~067|Darhan~037|Dornod~061|Dornogovi~063|Dundgovi~059|Dzavhan~057|Govi-Altay~065|Govi-Sumber~064|Hovd~043|Hovsgol~041|Omnogovi~053|Ovorhangay~055|Selenge~049|Suhbaatar~051|Tov~047|Ulaanbaatar~1|Uvs~046|Erdenet~074"],["Montenegro","ME","Andrijevica~01|Bar~02|Berane~03|Bijelo Polje~04|Budva~05|Cetinje~06|Danilovgrad~07|Gusinje~22|Herceg Novi~08|Kola\u0161in~09|Kotor~10|Mojkovac~11|Nik\u0161i\u0107~12|Petnica~23|Plav~13|Plu\u017eine~14|Pljevlja~15|Podgorica~16|Ro\u017eaje~17|\u0160avnik~18|Tivat~19|Ulcinj~20|\u017dabljak~21"],["Montserrat","MS","Saint Anthony~undefined|Saint Georges~undefined|Saint Peter's~undefined"],["Morocco","MA","Tanger-T\xe9touan-Al Hoce\xefma~MA-01|L'Oriental~MA-02|F\xe8s-Mekn\xe8s~MA-03|Rabat-Sal\xe9-K\xe9nitra~MA-04|B\xe9ni Mellal-Kh\xe9nifra~MA-05|Casablanca-Settat~MA-06|Marrakech-Safi~MA-07|Dr\xe2a-Tafilalet~MA-08|Souss-Massa~MA-09|Guelmim-Oued Noun~MA-10|La\xe2youne-Sakia El Hamra~MA-11|Dakhla-Oued Ed-Dahab~MA-12"],["Mozambique","MZ","Cabo Delgado~P|Gaza~G|Inhambane~I|Manica~B|Maputo~L|Maputo (City)~MPM|Nampula~N|Niassa~A|Sofala~S|Tete~T|Zambezia~Q"],["Myanmar","MM","Ayeyarwady~07|Bago~02|Chin~14|Kachin~11|Kayah~12|Kayin~13|Magway~03|Mandalay~04|Mon~15|Nay Pyi Taw~18|Rakhine~16|Sagaing~01|Shan~17|Tanintharyi~05|Yangon~06"],["Namibia","NA","Erongo~ER|Hardap~HA|Kavango East~KE|Kavango West~KW|Karas~KA|Khomas~KH|Kunene~KU|Ohangwena~OW|Omaheke~OH|Omusati~OS|Oshana~ON|Oshikoto~OT|Otjozondjupa~OD|Zambezi~CA"],["Nauru","NR","Aiwo~01|Anabar~02|Anetan~03|Anibare~04|Baiti~05|Boe~06|Buada~07|Denigomodu~08|Ewa~09|Ijuw~10|Meneng~11|Nibok~12|Uaboe~13|Yaren~14"],["Nepal","NP","Province No. 1~1|Madhesh Province~2|Bagmati Province~3|Gandaki Province~4|Lumbini Province~5|Karnali Province~6|Sudurpashchim Province~7"],["Netherlands","NL","Drenthe~DR|Flevoland~FL|Friesland~FR|Gelderland~GE|Groningen~GR|Limburg~LI|Noord-Brabant~NB|Noord-Holland~NH|Overijssel~OV|Utrecht~UT|Zeeland~ZE|Zuid-Holland~ZH"],["New Caledonia","NC","Iles Loyaute~undefined|Nord~undefined|Sud~undefined"],["New Zealand","NZ","Auckland~AUK|Bay of Plenty~BOP|Canterbury~CAN|Gisborne~GIS|Hawke's Bay~HKB|Marlborough~MBH|Manawatu-Wanganui~MWT|Northland~NTL|Nelson~NSN|Otago~OTA|Southland~STL|Taranaki~TKI|Tasman~TAS|Waikato~WKO|Wellington~WGN|West Coast~WTC|Chatham Islands Territory~CIT"],["Nicaragua","NI","Boaco~BO|Carazo~CA|Chinandega~CI|Chontales~CO|Estel\xed~ES|Granada~GR|Jinotega~JI|Le\xf3n~LE|Madriz~MD|Managua~MN|Masaya~MS|Matagalpa~MT|Nueva Segovia~NS|R\xedo San Juan~SJ|Rivas~RI|Atl\xe1ntico Norte~AN|Atl\xe1ntico Sur~AS"],["Niger","NE","Agadez~1|Diffa~2|Dosso~3|Maradi~4|Niamey~8|Tahoua~5|Tillab\xe9ri~6|Zinder~7"],["Nigeria","NG","Abia~AB|Abuja Federal Capital Territory~FC|Adamawa~AD|Akwa Ibom~AK|Anambra~AN|Bauchi~BA|Bayelsa~BY|Benue~BE|Borno~BO|Cross River~CR|Delta~DE|Ebonyi~EB|Edo~ED|Ekiti~EK|Enugu~EN|Gombe~GO|Imo~IM|Jigawa~JI|Kaduna~KD|Kano~KN|Katsina~KT|Kebbi~KE|Kogi~KO|Kwara~KW|Lagos~LA|Nassarawa~NA|Niger~NI|Ogun~OG|Ondo~ON|Osun~OS|Oyo~OY|Plateau~PL|Rivers~RI|Sokoto~SO|Taraba~TA|Yobe~YO|Zamfara~ZA"],["Niue","NU","Niue~undefined"],["Norfolk Island","NF","Norfolk Island~undefined"],["Northern Mariana Islands","MP","Northern Islands~undefined|Rota~undefined|Saipan~undefined|Tinian~undefined"],["Norway","NO","Akershus~02|Aust-Agder~09|Buskerud~06|Finnmark~20|Hedmark~04|Hordaland~12|M\xf8re og Romsdal~15|Nordland~18|Nord-Tr\xf8ndelag~17|Oppland~05|Oslo~03|Rogaland~11|Sogn og Fjordane~14|S\xf8r-Tr\xf8ndelag~16|Telemark~08|Troms~19|Vest-Agder~10|Vestfold~07|\xd8stfold~01|Jan Mayen~22|Svalbard~21"],["Oman","OM","Ad Dakhiliyah~DA|Al Buraymi~BU|Al Wusta~WU|Az Zahirah~ZA|Janub al Batinah~BS|Janub ash Sharqiyah~SS|Masqat~MA|Musandam~MU|Shamal al Batinah~BJ|Shamal ash Sharqiyah~SJ|Zufar~ZU"],["Pakistan","PK","\u0100z\u0101d Kashm\u012br~JK|Bal\u014dchist\u0101n~BA|Gilgit-Baltist\u0101n~GB|Isl\u0101m\u0101b\u0101d~IS|Kha\u012bbar Pakht\u016bnkhw\u0101s~KP|Punj\u0101b~PB|Sindh~SD|Federally Administered Tribal Areas~TA"],["Palau","PW","Aimeliik~002|Airai~004|Angaur~010|Hatobohei~050|Kayangel~100|Koror~150|Melekeok~212|Ngaraard~214|Ngarchelong~218|Ngardmau~222|Ngatpang~224|Ngchesar~226|Ngeremlengui~227|Ngiwal~228|Peleliu~350|Sonsoral~370"],["Palestine, State of","PS","Ak Khal\u012bl~HBN|Al Quds~JEM|Ar\u012b\u1e29\u0101 wal Aghw\u0101r~JRH|Bayt La\u1e29m~BTH|Dayr al Bala\u1e29~DEB|Ghazzah~GZA|Jan\u012bn~JEN|Kh\u0101n Y\u016bnis~KYS|N\u0101blus~NBS|Qalq\u012byah~QQA|Rafa\u1e29~RFH|R\u0101m All\u0101h wal B\u012brah~RBH|Salf\u012bt~SLT|Sham\u0101l Ghazzah~NGZ|\u0162\u016bb\u0101s~TBS|\u0162\u016blkarm~TKM"],["Panama","PA","Bocas del Toro~1|Chiriqu\xed~4|Cocl\xe9~2|Col\xf3n~3|Dari\xe9n~5|Ember\xe1~EM|Herrera~6|Kuna Yala~KY|Los Santos~7|Ng\xe4be-Bugl\xe9~NB|Panam\xe1~8|Panam\xe1 Oeste~10|Veraguas~9"],["Papua New Guinea","PG","Bougainville~NSB|Central~CPM|Chimbu~CPK|East New Britain~EBR|East Sepik~ESW|Eastern Highlands~EHG|Enga~EPW|Gulf~GPK|Hela~HLA|Jiwaka~JWK|Madang~MOM|Manus~MRL|Milne Bay~MBA|Morobe~MPL|Port Moresby~NCD|New Ireland~NIK|Northern~NPP|Southern Highlands~SHM|West New Britain~WBK|West Sepik~SAN|Western~WPD|Western Highlands~WHM"],["Paraguay","PY","Alto Paraguay~16|Alto Parana~10|Amambay~13|Asuncion~ASU|Caaguazu~5|Caazapa~6|Canindeyu~14|Central~11|Concepcion~1|Cordillera~3|Boqueron~17|Guaira~4|Itapua~7|Misiones~8|Neembucu~12|Paraguari~9|Presidente Hayes~15|San Pedro~2"],["Peru","PE","Amazonas~AMA|Ancash~ANC|Apurimac~APU|Arequipa~ARE|Ayacucho~AYA|Cajamarca~CAJ|Callao~CAL|Cusco~CUS|Huancavelica~HUV|Huanuco~HUC|Ica~ICA|Junin~JUN|La Libertad~LAL|Lambayeque~LAM|Lima~LIM|Loreto~LOR|Madre de Dios~MDD|Moquegua~MOQ|Municipalidad Metropolitana de Lima~LMA|Pasco~PAS|Piura~PIU|Puno~PUN|San Martin~SAM|Tacna~TAC|Tumbes~TUM|Ucayali~UCA"],["Philippines","PH","Abra~ABR|Agusan del Norte~AGN|Agusan del Sur~AGS|Aklan~AKL|Albay~ALB|Antique~ANT|Apayao~APA|Aurora~AUR|Basilan~BAS|Bataan~BAN|Batanes~BTN|Batangas~BTG|Benguet~BEN|Biliran~BIL|Bohol~BOH|Bukidnon~BUK|Bulacan~BUL|Cagayan~CAG|Camarines Norte~CAN|Camarines Sur~CAS|Camiguin~CAM|Capiz~CAP|Catanduanes~CAT|Cavite~CAV|Cebu~CEB|Cotabato~NCO|Davao del Norte~DAV|Davao del Sur~DAS|Davao Occidental~DVO|Davao Oriental~DAO|Davao de Oro~COM|Dinagat Islands~DIN|Eastern Samar~EAS|Guimaras~GUI|Ifugao~IFU|Ilocos Norte~ILN|Ilocos Sur~ILS|Iloilo~ILI|Isabela~ISA|Kalinga~KAL|La Union~LUN|Laguna~LAG|Lanao del Norte~LAN|Lanao del Sur~LAS|Leyte~LEY|Maguindanao~MAG|Marinduque~MAD|Masbate~MAS|Metro Manila~00|Mindoro Occidental~MDC|Mindoro Oriental~MDR|Misamis Occidental~MSC|Misamis Oriental~MSR|Mountain Province~MOU|Negros Occidental~NEC|Negros Oriental~NER|Northern Samar~NSA|Nueva Ecija~NUE|Nueva Vizcaya~NUV|Palawan~PLW|Pampanga~PAM|Pangasinan~PAN|Quezon~QUE|Quirino~QUI|Rizal~RIZ|Romblon~ROM|Samar~WSA|Sarangani~SAR|Siquijor~SIG|Sorsogon~SOR|South Cotabato~SCO|Southern Leyte~SLE|Sultan Kudarat~AUK|Sulu~SLU|Surigao del Norte~SUN|Surigao del Sur~SUR|Tarlac~TAR|Tawi-Tawi~TAW|Zambales~ZMB|Zamboanga del Norte~ZAN|Zamboanga del Sur~ZAS|Zamboanga Sibugay~ZSI"],["Pitcairn","PN","Pitcairn Islands~undefined"],["Poland","PL","Dolno\u015bl\u0105skie~02|Kujawsko-pomorskie~04|\u0141\xf3dzkie~10|Lubelskie~06|Lubuskie~08|Ma\u0142opolskie~12|Mazowieckie~14|Opolskie~16|Podkarpackie~18|Podlaskie~20|Pomorskie~22|\u015al\u0105skie~24|\u015awi\u0119tokrzyskie~26|Warmi\u0144sko-mazurskie~28|Wielkopolskie~30|Zachodniopomorskie~32"],["Portugal","PT","A\xe7ores~20|Aveiro~01|Beja~02|Braga~03|Bragan\xe7a~04|Castelo Branco~05|Coimbra~06|\xc9vora~07|Faro~08|Guarda~09|Leiria~10|Lisboa~11|Madeira~30|Portalegre~12|Porto~13|Santar\xe9m~14|Set\xfabal~15|Viana do Castelo~16|Vila Real~17|Viseu~18"],["Puerto Rico","PR","Adjuntas~undefined|Aguada~undefined|Aguadilla~undefined|Aguas Buenas~undefined|Aibonito~undefined|Anasco~undefined|Arecibo~undefined|Arroyo~undefined|Barceloneta~undefined|Barranquitas~undefined|Bayamon~undefined|Cabo Rojo~undefined|Caguas~undefined|Camuy~undefined|Canovanas~undefined|Carolina~undefined|Cat~undefined|Ceiba~undefined|Ciales~undefined|Cidra~undefined|Coamo~undefined|Comerio~undefined|Corozal~undefined|Culebra~undefined|Dorado~undefined|Fajardo~undefined|Florida~undefined|Guanica~undefined|Guayama~undefined|Guayanilla~undefined|Guaynabo~undefined|Gurabo~undefined|Hatillo~undefined|Hormigueros~undefined|Humacao~undefined|Isabe~undefined|Juana Diaz~undefined|Juncos~undefined|Lajas~undefined|Lares~undefined|Las Marias~undefined|Las oiza~undefined|Luquillo~undefined|Manati~undefined|Maricao~undefined|Maunabo~undefined|Mayaguez~undefined|Moca~undefined|Morovis~undefined|Naguabo~undefined|Naranjito~undefined|Orocovis~undefined|Patillas~undefined|Penuelas~undefined|Ponce~undefined|Quebradillas~undefined|Rincon~undefined|Rio Grande~undefined|Sabana linas~undefined|San German~undefined|San Juan~undefined|San Lorenzo~undefined|San Sebastian~undefined|Santa Isabel~undefined|Toa Alta~undefined|Toa Baja~undefined|Trujillo Alto~undefined|Utuado~undefined|Vega Alta~undefined|Vega ues~undefined|Villalba~undefined|Yabucoa~undefined|Yauco~undefined"],["Qatar","QA","Ad Daw\u1e29ah~DA|Al Khawr wa adh Dhakh\u012brah~KH|Al Wakrah~WA|Ar Rayy\u0101n~RA|Ash Sham\u0101l~MS|Az\u0327 Za\u0327`\u0101yin~ZA|Umm \u015eal\u0101l~US"],["R\xe9union","RE","R\xe9union~undefined"],["Romania","RO","Alba~AB|Arad~AR|Arges~AG|Bacau~BC|Bihor~BH|Bistrita-Nasaud~BN|Botosani~BT|Braila~BR|Brasov~BV|Iifov~B|Buzau~BZ|Calarasi~CL|Caras-Severin~CS|Cluj~CJ|Constanta~CT|Covasna~CV|Dambovita~DB|Dolj~DJ|Galati~GL|Giurgiu~GR|Gorj~GJ|Harghita~HR|Hunedoara~HD|Ialomita~IL|Iasi~IS|Maramures~MM|Mehedinti~MH|Mures~MS|Neamt~NT|Olt~OT|Prahova~PH|Salaj~SJ|Satu Mare~SM|Sibiu~SB|Suceava~SV|Teleorman~TR|Timis~TM|Tulcea~TL|Valcea~VL|Vaslui~VS|Vrancea~VN"],["Russian Federation","RU","Republic of Adygea~AD|Republic of Altai (Gorno-Altaysk)~AL|Altai Krai~ALT|Amur Oblast~AMU|Arkhangelsk Oblast~ARK|Astrakhan Oblast~AST|Republic of Bashkortostan~BA|Belgorod Oblast~BEL|Bryansk Oblast~BRY|Republic of Buryatia~BU|Chechen Republic~CE|Chelyabinsk Oblast~CHE|Chukotka Autonomous Okrug~CHU|Chuvash Republic~CU|Republic of Dagestan~DA|Republic of Ingushetia~IN|Irkutsk Oblast~IRK|Ivanovo Oblast~IVA|Jewish Autonomous Oblast~JEW|Kabardino-Balkar Republic~KB|Kaliningrad Oblast~KLN|Republic of Kalmykia~KL|Kaluga Oblast~KLU|Kamchatka Krai~KAM|Karachay-Cherkess Republic~KC|Republic of Karelia~KR|Khabarovsk Krai~KHA|Republic of Khakassia~KK|Khanty-Mansi Autonomous Okrug - Yugra~KHM|Kemerovo Oblast~KEM|Kirov Oblast~KIR|Komi Republic~KO|Kostroma Oblast~KOS|Krasnodar Krai~KDA|Krasnoyarsk Krai~KYA|Kurgan Oblast~KGN|Kursk Oblast~KRS|Leningrad Oblast~LEN|Lipetsk Oblast~LIP|Magadan Oblast~MAG|Mari El Republic~ME|Republic of Mordovia~MO|Moscow Oblast~MOS|Moscow~MOW|Murmansk Oblast~MU|Nenets Autonomous Okrug~NEN|Nizhny Novgorod Oblast~NIZ|Novgorod Oblast~NGR|Novosibirsk Oblast~NVS|Omsk Oblast~OMS|Orenburg Oblast~ORE|Oryol Oblast~ORL|Penza Oblast~PNZ|Perm Krai~PER|Primorsky Krai~PRI|Pskov Oblast~PSK|Rostov Oblast~ROS|Ryazan Oblast~RYA|Saint Petersburg~SPE|Sakha (Yakutia) Republic~SA|Sakhalin Oblast~SAK|Samara Oblast~SAM|Saratov Oblast~SAR|Republic of North Ossetia-Alania~NOA|Smolensk Oblast~SMO|Stavropol Krai~STA|Sverdlovsk Oblast~SVE|Tambov Oblast~TAM|Republic of Tatarstan~TA|Tomsk Oblast~TOM|Tuva Republic~TU|Tula Oblast~TUL|Tver Oblast~TVE|Tyumen Oblast~TYU|Udmurt Republic~UD|Ulyanovsk Oblast~ULY|Vladimir Oblast~VLA|Volgograd Oblast~VGG|Vologda Oblast~VLG|Voronezh Oblast~VOR|Yamalo-Nenets Autonomous Okrug~YAN|Yaroslavl Oblast~YAR|Zabaykalsky Krai~ZAB"],["Rwanda","RW","Kigali~01|Eastern~02|Northern~03|Western~04|Southern~05"],["Saint Barth\xe9lemy","BL","Au Vent~02|Sous le Vent~01"],["Saint Helena, Ascension and Tristan da Cunha","SH","Ascension~AC|Saint Helena~HL|Tristan da Cunha~TA"],["Saint Kitts and Nevis","KN","Saint Kitts~K|Nevis~N"],["Saint Lucia","LC","Anse-la-Raye~01|Canaries~12|Castries~02|Choiseul~03|Dennery~05|Gros Islet~06|Laborie~07|Micoud~08|Soufriere~10|Vieux Fort~11"],["Saint Martin","MF","Saint Martin~undefined"],["Saint Pierre and Miquelon","PM","Miquelon~undefined|Saint Pierre~undefined"],["Saint Vincent and the Grenadines","VC","Charlotte~01|Grenadines~06|Saint Andrew~02|Saint David~03|Saint George~04|Saint Patrick~05"],["Samoa","WS","A'ana~AA|Aiga-i-le-Tai~AL|Atua~AT|Fa'asaleleaga~FA|Gaga'emauga~GE|Gagaifomauga~GI|Palauli~PA|Satupa'itea~SA|Tuamasaga~TU|Va'a-o-Fonoti~VF|Vaisigano~VS"],["San Marino","SM","Acquaviva~01|Borgo Maggiore~06|Chiesanuova~02|Domagnano~03|Faetano~04|Fiorentino~05|Montegiardino~08|San Marino~07|Serravalle~09"],["Sao Tome and Principe","ST","Principe~P|Sao Tome~S"],["Saudi Arabia","SA","'Asir~14|Al Bahah~11|Al Hudud ash Shamaliyah~08|Al Jawf~12|Al Madinah al Munawwarah~03|Al Qasim~05|Ar Riyad~01|Ash Sharqiyah~04|Ha'il~06|Jazan~09|Makkah al Mukarramah~02|Najran~10|Tabuk~07"],["Senegal","SN","Dakar~DK|Diourbel~DB|Fatick~FK|Kaffrine~KA|Kaolack~KL|Kedougou~KE|Kolda~KD|Louga~LG|Matam~MT|Saint-Louis~SL|Sedhiou~SE|Tambacounda~TC|Thies~TH|Ziguinchor~ZG"],["Serbia","RS","Beograd (Belgrade)~00|Borski~14|Brani\u010devski~11|Jablani\u010dki~23|Ju\u017enoba\u010dki~06|Ju\u017enobanatski~04|Kolubarski~09|Kosovski~25|Kosovsko-Mitrova\u010dki~28|Kosovsko-Pomoravski~29|Ma\u010dvanski~08|Moravi\u010dki~17|Ni\u0161avski~20|P\u010dinjski~24|Pe\u0107ki~26|Pirotski~22|Podunavski~10|Pomoravski~13|Prizrenski~27|Rasinski~19|Ra\u0161ki~18|Severnoba\u010dki~01|Severnobanatski~03|Srednjebanatski~02|Sremski~07|\u0160umadijski~12|Topli\u010dki~21|Zaje\u010darski~15|Zapadnoba\u010dki~05|Zlatiborski~16"],["Seychelles","SC","Anse aux Pins~01|Anse Boileau~02|Anse Etoile~03|Anse Royale~05|Anu Cap~04|Baie Lazare~06|Baie Sainte Anne~07|Beau Vallon~08|Bel Air~09|Bel Ombre~10|Cascade~11|Glacis~12|Grand'Anse Mahe~13|Grand'Anse Praslin~14|La Digue~15|La Riviere Anglaise~16|Les Mamelles~24|Mont Buxton~17|Mont Fleuri~18|Plaisance~19|Pointe La Rue~20|Port Glaud~21|Roche Caiman~25|Saint Louis~22|Takamaka~23"],["Sierra Leone","SL","Eastern~E|Northern~N|Southern~S|Western~W"],["Singapore","SG","Central Singapore~01|North East~02|North West~03|South East~04|South West~05"],["Sint Maarten (Dutch part)","SX","Sint Maarten~undefined"],["Slovakia","SK","Banskobystricky~BC|Bratislavsky~BL|Kosicky~KI|Nitriansky~NI|Presovsky~PV|Trenciansky~TC|Trnavsky~TA|Zilinsky~ZI"],["Slovenia","SI","Ajdovscina~001|Apace~195|Beltinci~002|Benedikt~148|Bistrica ob Sotli~149|Bled~003|Bloke~150|Bohinj~004|Borovnica~005|Bovec~006|Braslovce~151|Brda~007|Brezice~009|Brezovica~008|Cankova~152|Celje~011|Cerklje na Gorenjskem~012|Cerknica~013|Cerkno~014|Cerkvenjak~153|Cirkulane~196|Crensovci~015|Crna na Koroskem~016|Crnomelj~017|Destrnik~018|Divaca~019|Dobje~154|Dobrepolje~020|Dobrna~155|Dobrova-Polhov Gradec~021|Dobrovnik~156|Dol pri Ljubljani~022|Dolenjske Toplice~157|Domzale~023|Dornava~024|Dravograd~025|Duplek~026|Gorenja Vas-Poljane~027|Gorisnica~028|Gorje~207|Gornja Radgona~029|Gornji Grad~030|Gornji Petrovci~031|Grad~158|Grosuplje~032|Hajdina~159|Hoce-Slivnica~160|Hodos~161|Horjul~162|Hrastnik~034|Hrpelje-Kozina~035|Idrija~036|Ig~037|Ilirska Bistrica~038|Ivancna Gorica~039|Izola~040|Jesenice~041|Jursinci~042|Kamnik~043|Kanal~044|Kidricevo~045|Kobarid~046|Kobilje~047|Kocevje~048|Komen~049|Komenda~164|Koper~050|Kodanjevica na Krki~197|Kostel~165|Kozje~051|Kranj~052|Kranjska Gora~053|Krizevci~166|Krsko~054|Kungota~055|Kuzma~056|Lasko~057|Lenart~058|Lendava~059|Litija~060|Ljubljana~061|Ljubno~062|Ljutomer~063|Log-Dragomer~208|Logatec~064|Loska Dolina~065|Loski Potok~066|Lovrenc na Pohorju~167|Lukovica~068|Luce~067|Majsperk~069|Makole~198|Maribor~070|Markovci~168|Medvode~071|Menges~072|Metlika~073|Mezica~074|Miklavz na Dravskem Polju~169|Miren-Kostanjevica~075|Mirna~212|Mirna Pec~170|Mislinja~076|Mokronog-Trebelno~199|Moravce~077|Moravske Toplice~078|Mozirje~079|Murska Sobota~080|Naklo~082|Nazarje~083|Nova Gorica~084|Novo Mesto~085|Odranci~086|Ormoz~087|Osilnica~088|Pesnica~089|Piran~090|Pivka~091|Podcetrtek~092|Podlehnik~172|Podvelka~093|Poljcane~200|Postojna~094|Prebold~174|Preddvor~095|Prevalje~175|Ptuj~096|Race-Fram~098|Radece~099|Radenci~100|Radlje ob Dravi~101|Radovljica~102|Ravne na Koroskem~103|Razkrizje~176|Recica ob Savinji~209|Rence-Vogrsko~201|Ribnica~104|Ribnica na Poboriu~177|Rogaska Slatina~106|Rogasovci~105|Rogatec~107|Ruse~108|Salovci~033|Selnica ob Dravi~178|Semic~109|Sempeter-Vrtojba~183|Sencur~117|Sentilj~118|Sentjernej~119|Sentjur~120|Sentrupert~211|Sevnica~110|Sezana~111|Skocjan~121|Skofja Loka~122|Skofljica~123|Slovenj Gradec~112|Slovenska Bistrica~113|Slovenske Konjice~114|Smarje pri elsah~124|Smarjeske Toplice~206|Smartno ob Paki~125|Smartno pri Litiji~194|Sodrazica~179|Solcava~180|Sostanj~126|Sredisce ob Dravi~202|Starse~115|Store~127|Straza~203|Sveta Ana~181|Sveta Trojica v Slovenskih Goricah~204|Sveta Andraz v Slovenskih Goricah~182|Sveti Jurij~116|Sveti Jurij v Slovenskih Goricah~210|Sveti Tomaz~205|Tabor~184|Tisina~010|Tolmin~128|Trbovlje~129|Trebnje~130|Trnovska Vas~185|Trzin~186|Trzic~131|Turnisce~132|Velenje~133|Velika Polana~187|Velike Lasce~134|Verzej~188|Videm~135|Vipava~136|Vitanje~137|Vodice~138|Vojnik~139|Vransko~189|Vrhnika~140|Vuzenica~141|Zagorje ob Savi~142|Zavrc~143|Zrece~144|Zalec~190|Zelezniki~146|Zetale~191|Ziri~147|Zirovnica~192|Zuzemberk~193"],["Solomon Islands","SB","Central~CE|Choiseul~CH|Guadalcanal~GU|Honiara~CT|Isabel~IS|Makira-Ulawa~MK|Malaita~ML|Rennell and Bellona~RB|Temotu~TE|Western~WE"],["Somalia","SO","Awdal~AW|Bakool~BK|Banaadir~BN|Bari~BR|Bay~BY|Galguduud~GA|Gedo~GE|Hiiraan~HI|Jubbada Dhexe~JD|Jubbada Hoose~JH|Mudug~MU|Nugaal~NU|Sanaag~SA|Shabeellaha Dhexe~SD|Shabeellaha Hoose~SH|Sool~SO|Togdheer~TO|Woqooyi Galbeed~WO"],["South Africa","ZA","Eastern Cape~EC|Free State~FS|Gauteng~GT|KwaZulu-Natal~NL|Limpopo~LP|Mpumalanga~MP|Northern Cape~NC|North West~NW|Western Cape~WC"],["South Georgia and South Sandwich Islands","GS","Bird Island~undefined|Bristol Island~undefined|Clerke Rocks~undefined|Montagu Island~undefined|Saunders Island~undefined|South Georgia~undefined|Southern Thule~undefined|Traversay Islands~undefined"],["South Sudan","SS","Central Equatoria~CE|Eastern Equatoria~EE|Jonglei~JG|Lakes~LK|Northern Bahr el Ghazal~BN|Unity~UY|Upper Nile~NU|Warrap~WR|Western Bahr el Ghazal~BW|Western Equatoria~EW"],["Spain","ES","Albacete~AB|Alicante~A|Almer\xeda~AN|Araba/\xc1lava~VI|Asturias~O|\xc1vila~AV|Badajoz~BA|Barcelona~B|Bizkaia~BI|Burgos~BU|C\xe1ceres~CC|C\xe1diz~CA|Cantabria~S|Castell\xf3n/Castell\xf3~CS|Ceuta~CE|Ciudad Real~CR|C\xf3rdoba~CO|A Coru\xf1a~C|Cuenca~CU|Gipuzkoa~SS|Girona~GI|Granada~GR|Guadalajara~GU|Huelva~H|Huesca~HU|Illes Balears~PM|Ja\xe9n~J|Le\xf3n~LE|Lleida~L|Lugo~LU|Madrid~M|M\xe1laga~MA|Melilla~ML|Murcia~MU|Navarra/Nafarroa~NA|Ourense~OR|Palencia~P|Las Palmas~GC|Pontevedra~PO|La Rioja~LO|Salamanca~SA|Santa Cruz de Tenerife~TF|Segovia~SG|Sevilla~SE|Soria~SO|Tarragona~T|Teruel~TE|Toledo~TO|Valencia/Val\xe8ncia~V|Valladolid~VA|Zamora~ZA|Zaragoza~Z"],["Sri Lanka","LK","Basnahira~1|Dakunu~3|Madhyama~2|Naegenahira~5|Sabaragamuwa~9|Uturu~4|Uturumaeda~7|Vayamba~6|Uva~8"],["Sudan","SD","Al Bahr al Ahmar~RS|Al Jazirah~GZ|Al Khartum~KH|Al Qadarif~GD|An Nil al Abyad~NW|An Nil al Azraq~NB|Ash Shamaliyah~NO|Gharb Darfur~DW|Gharb Kurdufan~GK|Janub Darfur~DS|Janub Kurdufan~KS|Kassala~KA|Nahr an Nil~NR|Shamal Darfur~DN|Sharq Darfur~DE|Shiamal Kurdufan~KN|Sinnar~SI|Wasat Darfur Zalinjay~DC"],["Suriname","SR","Brokopondo~BR|Commewijne~CM|Coronie~CR|Marowijne~MA|Nickerie~NI|Para~PR|Paramaribo~PM|Saramacca~SA|Sipaliwini~SI|Wanica~WA"],["Eswatini","SZ","Hhohho~HH|Lubombo~LU|Manzini~MA|Shiselweni~SH"],["Sweden","SE","Blekinge~K|Dalarna~W|G\xe4vleborg~X|Gotland~I|Halland~N|J\xe4mtland~Z|J\xf6nk\xf6ping~F|Kalmar~H|Kronoberg~G|Norrbotten~BD|\xd6rebro~T|\xd6sterg\xf6tland~E|Sk\xe5ne~M|S\xf6dermanland~D|Stockholm~AB|Uppsala~C|V\xe4rmland~S|V\xe4sterbotten~AC|V\xe4sternorrland~Y|V\xe4stmanland~U|V\xe4stra G\xf6taland~O"],["Switzerland","CH","Aargau~AG|Appenzell Ausserrhoden~AR|Appenzell Innerhoden~AI|Basel-Landschaft~BL|Basel-Stadt~BS|Bern~BE|Fribourg~FR|Gen\xe8ve~GE|Glarus~GL|Graub\xfcnden~GR|Jura~JU|Luzern~LU|Neuch\xe2tel~NE|Nidwalden~NW|Obwalden~OW|Sankt Gallen~SG|Schaffhausen~SH|Schwyz~SZ|Solothurn~SO|Thurgau~TG|Ticino~TI|Uri~UR|Valais~VS|Vaud~VD|Zug~ZG|Z\xfcrich~ZH"],["Syrian Arab Republic","SY","Al Hasakah~HA|Al Ladhiqiyah~LA|Al Qunaytirah~QU|Ar Raqqah~RA|As Suwayda'~SU|Dar'a~DR|Dayr az Zawr~DY|Dimashq~DI|Halab~HL|Hamah~HM|Hims~HI|Idlib~ID|Rif Dimashq~RD|Tartus~TA"],["Taiwan","TW","Changhua~CHA|Chiayi~CYQ|Hsinchu~HSQ|Hualien~HUA|Kaohsiung~KHH|Keelung~KEE|Kinmen~KIN|Lienchiang~LIE|Miaoli~MIA|Nantou~NAN|Penghu~PEN|New Taipei~NWT|Pingtung~PIF|Taichung~TXG|Tainan~TNN|Taipei~TPE|Taitung~TTT|Taoyuan~TAO|Yilan~ILA|Yunlin~YUN"],["Tajikistan","TJ","Dushanbe~DU|K\u016dhistoni Badakhshon~GB|Khatlon~KT|Sughd~SU"],["Tanzania, United Republic of","TZ","Arusha~01|Coast~19|Dar es Salaam~02|Dodoma~03|Iringa~04|Kagera~05|Kigoma~08|Kilimanjaro~09|Lindi~12|Manyara~26|Mara~13|Mbeya~14|Morogoro~16|Mtwara~17|Mwanza~18|Pemba North~06|Pemba South~10|Rukwa~20|Ruvuma~21|Shinyanga~22|Singida~23|Tabora~24|Tanga~25|Zanzibar North~07|Zanzibar Central/South~11|Zanzibar Urban/West~15"],["Thailand","TH","Amnat Charoen~37|Ang Thong~15|Bueng Kan~38|Buri Ram~31|Chachoengsao~24|Chai Nat~18|Chaiyaphum~36|Chanthaburi~22|Chiang Mai~50|Chiang Rai~57|Chon Buri~20|Chumphon~86|Kalasin~46|Kamphaeng Phet~62|Kanchanaburi~71|Khon Kaen~40|Krabi~81|Krung Thep Mahanakhon (Bangkok)~10|Lampang~52|Lamphun~51|Loei~42|Lop Buri~16|Mae Hong Son~58|Maha Sarakham~44|Mukdahan~49|Nakhon Nayok~26|Nakhon Phathom~73|Nakhon Phanom~48|Nakhon Ratchasima~30|Nakhon Sawan~60|Nakhon Si Thammarat~80|Nan~55|Narathiwat~96|Nong Bua Lam Phu~39|Nong Khai~43|Nonthaburi~12|Pathum Thani~13|Pattani~94|Phangnga~82|Phatthalung~93|Phayao~56|Phetchabun~67|Phetchaburi~76|Phichit~66|Phitsanulok~65|Phra Nakhon Si Ayutthaya~14|Phrae~54|Phuket~83|Prachin Buri~25|Prachuap Khiri Khan~77|Ranong~85|Ratchaburi~70|Rayong~21|Roi Et~45|Sa Kaeo~27|Sakon Nakhon~47|Samut Prakan~11|Samut Sakhon~74|Samut Songkhram~75|Saraburi~19|Satun~91|Sing Buri~17|Si Sa ket~33|Songkhla~90|Sukhothai~64|Suphan Buri~72|Surat Thani~84|Surin~32|Tak~63|Trang~92|Trat~23|Ubon Ratchathani~34|Udon Thani~41|Uthai Thani~61|Uttaradit~53|Yala~95|Yasothon~35"],["Timor-Leste","TL","Aileu~AL|Ainaro~AN|Baucau~BA|Bobonaro~BO|Cova Lima~CO|Dili~DI|Ermera~ER|Lautem~LA|Liquica~LI|Manatuto~MT|Manufahi~MF|Oecussi~OE|Viqueque~VI"],["Togo","TG","Centre~C|Kara~K|Maritime~M|Plateaux~P|Savannes~S"],["Tokelau","TK","Atafu~undefined|Fakaofo~undefined|Nukunonu~undefined"],["Tonga","TO","'Eua~01|Ha'apai~02|Niuas~03|Tongatapu~04|Vava'u~05"],["Trinidad and Tobago","TT","Arima~ARI|Chaguanas~CHA|Couva-Tabaquite-Talparo~CTT|Diefo Martin~DMN|Mayaro-Rio Claro~MRC|Penal-Debe~PED|Point Fortin~PTF|Port-of-Spain~POS|Princes Town~PRT|San Fernando~SFO|San Juan-Laventille~SJL|Sangre Grande~SGE|Siparia~SIP|Tobago~TOB|Tunapuna-Piarco~TUP"],["Tunisia","TN","Ariana~12|Beja~31|Ben Arous~13|Bizerte~23|Gabes~81|Gafsa~71|Jendouba~32|Kairouan~41|Kasserine~42|Kebili~73|Kef~33|Mahdia~53|Medenine~82|Monastir~52|Nabeul~21|Sfax~61|Sidi Bouzid~43|Siliana~34|Sousse~51|Tataouine~83|Tozeur~72|Tunis~11|Zaghouan~22"],["Turkey","TR","Adana~01|Adiyaman~02|Afyonkarahisar~03|Agri~04|Aksaray~68|Amasya~05|Ankara~06|Antalya~07|Ardahan~75|Artvin~08|Aydin~09|Balikesir~10|Bartin~74|Batman~72|Bayburt~69|Bilecik~11|Bingol~12|Bitlis~13|Bolu~14|Burdur~15|Bursa~16|Canakkale~17|Cankiri~18|Corum~19|Denizli~20|Diyarbakir~21|Duzce~81|Edirne~22|Elazig~23|Erzincan~24|Erzurum~25|Eskisehir~26|Gaziantep~27|Giresun~28|Gumushane~29|Hakkari~30|Hatay~31|Igdir~76|Isparta~32|Istanbul~34|Izmir~35|Kahramanmaras~46|Karabuk~78|Karaman~70|Kars~36|Kastamonu~37|Kayseri~38|Kilis~79|Kirikkale~71|Kirklareli~39|Kirsehir~40|Kocaeli~41|Konya~42|Kutahya~43|Malatya~44|Manisa~45|Mardin~47|Mersin~33|Mugla~48|Mus~49|Nevsehir~50|Nigde~51|Ordu~52|Osmaniye~80|Rize~53|Sakarya~54|Samsun~55|Sanliurfa~63|Siirt~56|Sinop~57|Sirnak~73|Sivas~58|Tekirdag~59|Tokat~60|Trabzon~61|Tunceli~62|Usak~64|Van~65|Yalova~77|Yozgat~66|Zonguldak~67"],["Turkmenistan","TM","Ahal~A|Asgabat~S|Balkan~B|Dashoguz~D|Lebap~L|Mary~M"],["Turks and Caicos Islands","TC","Turks and Caicos Islands~undefined"],["Tuvalu","TV","Funafuti~FUN|Nanumanga~NMG|Nanumea~NMA|Niutao~NIT|Nui~NUI|Nukufetau~NKF|Nukulaelae~NKL|Vaitupu~VAU"],["Uganda","UG","Abim~317|Adjumani~301|Amolatar~314|Amuria~216|Amuru~319|Apac~302|Arua~303|Budaka~217|Bududa~223|Bugiri~201|Bukedea~224|Bukwa~218|Buliisa~419|Bundibugyo~401|Bushenyi~402|Busia~202|Butaleja~219|Dokolo~318|Gulu~304|Hoima~403|Ibanda~416|Iganga~203|Isingiro~417|Jinja~204|Kaabong~315|Kabale~404|Kabarole~405|Kaberamaido~213|Kalangala~101|Kaliro~220|Kampala~102|Kamuli~205|Kamwenge~413|Kanungu~414|Kapchorwa~206|Kasese~406|Katakwi~207|Kayunga~112|Kibaale~407|Kiboga~103|Kiruhura~418|Kisoro~408|Kitgum~305|Koboko~316|Kotido~306|Kumi~208|Kyenjojo~415|Lira~307|Luwero~104|Lyantonde~116|Manafwa~221|Maracha~320|Masaka~105|Masindi~409|Mayuge~214|Mbale~209|Mbarara~410|Mityana~114|Moroto~308|Moyo~309|Mpigi~106|Mubende~107|Mukono~108|Nakapiripirit~311|Nakaseke~115|Nakasongola~109|Namutumba~222|Nebbi~310|Ntungamo~411|Oyam~321|Pader~312|Pallisa~210|Rakai~110|Rukungiri~412|Sembabule~111|Sironko~215|Soroti~211|Tororo~212|Wakiso~113|Yumbe~313"],["Ukraine","UA","Cherkaska oblast~71|Chernihivska oblast~74|Chernivetska oblast~77|Dnipropetrovska oblast~12|Donetska oblast~14|Ivano-Frankivska oblast~26|Kharkivska oblast~63|Khersonska oblast~65|Khmelnytska oblast~68|Kyivska oblast~32|Kirovohradska oblast~35|Luhanska oblast~09|Lvivska oblast~46|Mykolaivska oblast~48|Odeska oblast~51|Poltavska oblast~53|Rivnenska oblast~56|Sumska oblast~59|Ternopilska oblast~61|Vinnytska oblast~05|Volynska oblast~07|Zakarpatska oblast~21|Zaporizka oblast~23|Zhytomyrska oblast~18|Avtonomna Respublika Krym~43|Kyiv~30|Sevastopol~40"],["United Arab Emirates","AE","Abu Dhabi~AZ|Ajman~AJ|Dubai~DU|Fujairah~FU|Ras al Khaimah~RK|Sharjah~SH|Umm Al Quwain~UQ"],["United Kingdom","GB","Aberdeen City~ABE|Aberdeenshire~ABD|Angus~ANS|Antrim and Newtownabbey~ANN|Ards and North Down~AND|Argyll and Bute~AGB|Armagh City, Banbridge and Craigavon~ABC|Barking and Dagenham~BDG|Barnet~BNE|Barnsley~BNS|Bath and North East Somerset~BAS|Bedford~BDF|Belfast City~BFS|Berkshire~BRK|Bexley~BEX|Birmingham~BIR|Blackburn with Darwen~BBD|Blackpool~BPL|Blaenau Gwent~BGW|Bolton~BOL|Bournemouth, Christchurch and Poole~BCP|Bracknell Forest~BRC|Bradford~BRD|Brent~BEN|Bridgend~BGE|Brighton and Hove~BNH|Bristol, City of~BST|Bromley~BRY|Buckinghamshire~BKM|Bury~BUR|Caerphilly~CAY|Calderdale~CLD|Cambridgeshire~CAM|Camden~CMD|Cardiff~CRF|Carmarthenshire~CMN|Causeway Coast and Glens~CCG|Central Bedfordshire~CBF|Ceredigion~CGN|Cheshire East~CHE|Cheshire West and Chester~CHW|Clackmannanshire~CLK|Conwy~CWY|Cornwall~CON|Coventry~COV|Croydon~CRY|Cumbria~CMA|Darlington~DAL|Denbighshire~DEN|Derby~DER|Derbyshire~DBY|Derry and Strabane~DRS|Devon~DEV|Doncaster~DNC|Dorset~DOR|Dudley~DUD|Dumfries and Galloway~DGY|Dundee City~DND|Durham, County~DUR|Ealing~EAL|East Ayrshire~EAY|East Dunbartonshire~EDU|East Lothian~ELN|East Renfrewshire~ERW|East Riding of Yorkshire~ERY|East Sussex~ESX|Edinburgh, City of~EDH|Eilean Siar~ELS|Enfield~ENF|Essex~ESS|Falkirk~FAL|Fermanagh and Omagh~FMO|Fife~FIF|Flintshire~FLN|Gateshead~GAT|Glasgow City~GLG|Gloucestershire~GLS|Greenwich~GRE|Gwynedd~GWN|Hackney~HCK|Halton~HAL|Hammersmith and Fulham~HMF|Hampshire~HAM|Haringey~HRY|Harrow~HRW|Hartlepool~HPL|Havering~HAV|Herefordshire~HEF|Hertfordshire~HRT|Highland~HLD|Hillingdon~HIL|Hounslow~HNS|Inverclyde~IVC|Isle of Anglesey~AGY|Isle of Wight~IOW|Isles of Scilly~IOS|Islington~ISL|Kensington and Chelsea~KEC|Kent~KEN|Kingston upon Hull~KHL|Kingston upon Thames~KTT|Kirklees~KIR|Knowsley~KWL|Lambeth~LBH|Lancashire~LAN|Leeds~LDS|Leicester~LCE|Leicestershire~LEC|Lewisham~LEW|Lincolnshire~LIN|Lisburn and Castlereagh~LBC|Liverpool~LIV|London, City of~LND|Luton~LUT|Manchester~MAN|Medway~MDW|Merthyr Tydfil~MTY|Merton~MRT|Mid and East Antrim~MEA|Mid-Ulster~MUL|Middlesbrough~MDB|Midlothian~MLN|Milton Keynes~MIK|Monmouthshire~MON|Moray~MRY|Neath Port Talbot~NTL|Newcastle upon Tyne~NET|Newham~NWM|Newport~NWP|Newry, Mourne and Down~NMD|Norfolk~NFK|North Ayrshire~NAY|North East Lincolnshire~NEL|North Lanarkshire~NLK|North Lincolnshire~NLN|North Somerset~NSM|North Tyneside~NTY|North Yorkshire~NYK|Northamptonshire~NTH|Northumberland~NBL|Nottingham~NGM|Nottinghamshire~NTT|Oldham~OLD|Orkney Islands~ORK|Oxfordshire~OXF|Pembrokeshire~PEM|Perth and Kinross~PKN|Peterborough~PTE|Plymouth~PLY|Portsmouth~POR|Powys~POW|Reading~RDG|Redbridge~RDB|Redcar and Cleveland~RCC|Renfrewshire~RFW|Rhondda Cynon Taff~RCT|Richmond upon Thames~RIC|Rochdale~RCH|Rotherham~ROT|Rutland~RUT|Salford~SLF|Sandwell~SAW|Scottish Borders~SCB|Sefton~SFT|Sheffield~SHF|Shetland Islands~ZET|Shropshire~SHR|Slough~SLG|Solihull~SOL|Somerset~SOM|South Ayrshire~SAY|South Gloucestershire~SGC|South Lanarkshire~SLK|South Tyneside~STY|Southampton~STH|Southend-on-Sea~SOS|Southwark~SWK|St. Helens~SHN|Staffordshire~STS|Stirling~STG|Stockport~SKP|Stockton-on-Tees~STT|Stoke-on-Trent~STE|Suffolk~SFK|Sunderland~SND|Surrey~SRY|Sutton~STN|Swansea~SWA|Swindon~SWD|Tameside~TAM|Telford and Wrekin~TFW|Thurrock~THR|Torbay~TOB|Torfaen~TOF|Tower Hamlets~TWH|Trafford~TRF|Vale of Glamorgan, The~VGL|Wakefield~WKF|Walsall~WLL|Waltham Forest~WFT|Wandsworth~WND|Warrington~WRT|Warwickshire~WAR|West Berkshire~WBK|West Dunbartonshire~WDU|West Lothian~WLN|West Sussex~WSX|Westminster~WSM|Wigan~WGN|Wiltshire~WIL|Windsor and Maidenhead~WNM|Wirral~WRL|Wokingham~WOK|Wolverhampton~WLV|Worcestershire~WOR|Wrexham~WRX|York~YOR"],["United States","US","Alabama~AL|Alaska~AK|American Samoa~AS|Arizona~AZ|Arkansas~AR|California~CA|Colorado~CO|Connecticut~CT|Delaware~DE|District of Columbia~DC|Micronesia~FM|Florida~FL|Georgia~GA|Guam~GU|Hawaii~HI|Idaho~ID|Illinois~IL|Indiana~IN|Iowa~IA|Kansas~KS|Kentucky~KY|Louisiana~LA|Maine~ME|Marshall Islands~MH|Maryland~MD|Massachusetts~MA|Michigan~MI|Minnesota~MN|Mississippi~MS|Missouri~MO|Montana~MT|Nebraska~NE|Nevada~NV|New Hampshire~NH|New Jersey~NJ|New Mexico~NM|New York~NY|North Carolina~NC|North Dakota~ND|Northern Mariana Islands~MP|Ohio~OH|Oklahoma~OK|Oregon~OR|Palau~PW|Pennsylvania~PA|Puerto Rico~PR|Rhode Island~RI|South Carolina~SC|South Dakota~SD|Tennessee~TN|Texas~TX|Utah~UT|Vermont~VT|Virgin Islands~VI|Virginia~VA|Washington~WA|West Virginia~WV|Wisconsin~WI|Wyoming~WY|Armed Forces Americas~AA|Armed Forces Europe, Canada, Africa and Middle East~AE|Armed Forces Pacific~AP"],["United States Minor Outlying Islands","UM","Baker Island~81|Howland Island~84|Jarvis Island~86|Johnston Atoll~67|Kingman Reef~89|Midway Islands~71|Navassa Island~76|Palmyra Atoll~95|Wake Island~79|Bajo Nuevo Bank~BN|Serranilla Bank~SB"],["Uruguay","UY","Artigas~AR|Canelones~CA|Cerro Largo~CL|Colonia~CO|Durazno~DU|Flores~FS|Florida~FD|Lavalleja~LA|Maldonado~MA|Montevideo~MO|Paysand\xfa~PA|R\xedo Negro~RN|Rivera~RV|Rocha~RO|Salto~SA|San Jos\xe9~SJ|Soriano~SO|Tacuaremb\xf3~TA|Treinta y Tres~TT"],["Uzbekistan","UZ","Toshkent shahri~TK|Andijon~AN|Buxoro~BU|Farg\u2018ona~FA|Jizzax~JI|Namangan~NG|Navoiy~NW|Qashqadaryo (Qarshi)~QA|Samarqand~SA|Sirdaryo (Guliston)~SI|Surxondaryo (Termiz)~SU|Toshkent wiloyati~TO|Xorazm (Urganch)~XO|Qoraqalpog\u2018iston Respublikasi (Nukus)~QR"],["Vanuatu","VU","Malampa~MAP|P\xe9nama~PAM|Sanma~SAM|Sh\xe9fa~SEE|Taf\xe9a~TAE|Torba~TOB"],["Venezuela, Bolivarian Republic of","VE","Dependencias Federales~W|Distrito Federal~A|Amazonas~Z|Anzo\xe1tegui~B|Apure~C|Aragua~D|Barinas~E|Bol\xedvar~F|Carabobo~G|Cojedes~H|Delta Amacuro~Y|Falc\xf3n~I|Gu\xe1rico~J|Lara~K|M\xe9rida~L|Miranda~M|Monagas~N|Nueva Esparta~O|Portuguesa~P|Sucre~R|T\xe1chira~S|Trujillo~T|Vargas~X|Yaracuy~U|Zulia~V"],["Vietnam","VN","An Giang~44|B\xe0 R\u1ecba - V\u0169ng T\xe0u~43|B\xecnh D\u01b0\u01a1ng~57|B\xecnh Ph\u01b0\u1edbc~58|B\xecnh \u0110\u1ecbnh~31|B\xecnh Thu\u1eadn~40|B\u1ea1c Li\xeau~55|B\u1eafc Giang~54|B\u1eafc K\u1ea1n~53|B\u1eafc Ninh~56|B\u1ebfn Tre~50|Cao B\u1eb1ng~04|C\xe0 Mau~59|\u0110\u1eafk L\u1eafk~33|\u0110\u1eafk N\xf4ng~72|\u0110i\u1ec7n Bi\xean~71|\u0110\u1ed3ng Nai~39|\u0110\u1ed3ng Th\xe1p~45|Gia Lai~30|H\xe0 Giang~03|H\xe0 Nam~63|H\xe0 T\xe2y~15|H\xe0 T\u0129nh~23|H\u1ea3i D\u01b0\u01a1ng~61|H\u1eadu Giang~73|H\xf2a B\xecnh~14|H\u01b0ng Y\xean~66|Kh\xe1nh H\xf2a~34|Ki\xean Giang~47|Kon Tum~28|Lai Ch\xe2u~01|L\xe2m \u0110\u1ed3ng~35|L\u1ea1ng S\u01a1n~09|L\xe0o Cai~02|Long An~41|Nam \u0110\u1ecbnh~67|Ngh\u1ec7 An~22|Ninh B\xecnh~18|Ninh Thu\u1eadn~36|Ph\xfa Th\u1ecd~68|Ph\xfa Y\xean~32|Qu\u1ea3ng B\xecnh~24|Qu\u1ea3ng Nam~27|Qu\u1ea3ng Ng\xe3i~29|Qu\u1ea3ng Ninh~13|Qu\u1ea3ng Tr\u1ecb~25|S\xf3c Tr\u0103ng~52|S\u01a1n La~05|T\xe2y Ninh~37|Th\xe1i B\xecnh~20|Th\xe1i Nguy\xean~69|Thanh H\xf3a~21|Th\u1eeba Thi\xean\u2013Hu\u1ebf~26|Ti\u1ec1n Giang~46|Tr\xe0 Vinh~51|Tuy\xean Quang~07|V\u0129nh Long~49|V\u0129nh Ph\xfac~70|Y\xean B\xe1i~06|C\u1ea7n Th\u01a1~CT|\u0110\xe0 N\u1eb5ng~DN|H\xe0 N\u1ed9i~HN|H\u1ea3i Ph\xf2ng~HP|H\u1ed3 Ch\xed Minh (S\xe0i G\xf2n)~SG"],["Virgin Islands, British","VG","Anegada~ANG|Jost Van Dyke~JVD|Tortola~TTA|Virgin Gorda~VGD"],["Virgin Islands, U.S.","VI","St. Thomas~STH|St. John~SJO|St. Croix~SCR"],["Wallis and Futuna","WF","Alo~ALO|Sigave~SIG|Wallis~WAL"],["Western Sahara","EH","Es Smara~ESM|Boujdour~BOD|La\xe2youne~LAA|Aousserd~AOU|Oued ed Dahab~OUD"],["Yemen","YE","Aby\u0101n~AB|'Adan~AD|A\u1e11 \u1e10\u0101li'~DA|Al Bay\u1e11\u0101'~BA|Al \u1e28udaydah~HU|Al Jawf~JA|Al Mahrah~MR|Al Ma\u1e29w\u012bt~MW|'Amr\u0101n~AM|Dham\u0101r~DH|\u1e28a\u1e11ramawt~HD|\u1e28ajjah~HJ|Ibb~IB|La\u1e29ij~LA|Ma'rib~MA|Raymah~RA|\u015e\u0101\u2018dah~SD|\u015ean\u2018\u0101'~SN|Shabwah~SH|T\u0101\u2018izz~TA"],["Zambia","ZM","Central~02|Copperbelt~08|Eastern~03|Luapula~04|Lusaka~09|Northern~05|North-Western~06|Southern~07|Western~01"],["Zimbabwe","ZW","Bulawayo~BU|Harare~HA|Manicaland~MA|Mashonaland Central~MC|Mashonaland East~ME|Mashonaland West~MW|Masvingo~MV|Matabeleland North~MN|Matabeleland South~MS|Midlands~MI"]],u="full",s="short",l="|",d="~",h=function(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")},c=function(){function a(a,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(a,i.key,i)}}return function(e,n,i){return n&&a(e.prototype,n),i&&a(e,i),e}}(),f=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(a[i]=n[i])}return a},S=function(a,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);a.prototype=Object.create(e&&e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(a,e):a.__proto__=e)},g=function(a,e){var n={};for(var i in a)e.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(a,i)&&(n[i]=a[i]);return n},m=function(a,e){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!==typeof e&&"function"!==typeof e?a:e},A=function(a,e){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return function(a,e){var n=[],i=!0,t=!1,r=void 0;try{for(var o,u=a[Symbol.iterator]();!(i=(o=u.next()).done)&&(n.push(o.value),!e||n.length!==e);i=!0);}catch(s){t=!0,r=s}finally{try{!i&&u.return&&u.return()}finally{if(t)throw r}}return n}(a,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")},v=function(a){if(Array.isArray(a)){for(var e=0,n=Array(a.length);e<a.length;e++)n[e]=a[e];return n}return Array.from(a)},y=function(a,e,n,i){var t=[],r=a;return n.length>0?r=a.filter((function(a){var e=A(a,2)[1];return n.indexOf(e)>-1})):i.length>0&&(r=a.filter((function(a){var e=A(a,2)[1];return-1===i.indexOf(e)}))),e.length>0&&(e.forEach((function(a){var e=r.find((function(e){return A(e,2)[1]===a}));e&&t.push(e)})),r=r.filter((function(a){var n=A(a,2)[1];return-1===e.indexOf(n)}))),t.length?[].concat(t,v(r)):r},b=function(a){function e(a){h(this,e);var n=m(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,a));return n.state={countries:y(o,a.priorityOptions,a.whitelist,a.blacklist)},n}return S(e,a),c(e,[{key:"getCountries",value:function(){var a=this.props,e=a.valueType,n=a.labelType;return this.state.countries.map((function(a){var t=A(a,2),r=t[0],o=t[1];return i.createElement("option",{value:e===s?o:r,key:o},n===s?o:r)}))}},{key:"getDefaultOption",value:function(){var a=this.props,e=a.showDefaultOption,n=a.defaultOptionLabel;return e?i.createElement("option",{value:"",key:"default"},n):null}},{key:"render",value:function(){var a=this.props,e=a.name,n=a.id,t=a.classes,r=a.value,o=a.onChange,u=a.onBlur,s=a.disabled,l=(a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.whitelist,a.blacklist,a.customOptions,a.priorityOptions,g(a,["name","id","classes","value","onChange","onBlur","disabled","showDefaultOption","defaultOptionLabel","labelType","valueType","whitelist","blacklist","customOptions","priorityOptions"])),d=f({},l,{name:e,value:r,onChange:function(a){return o(a.target.value,a)},onBlur:function(a){return u(a.target.value,a)},disabled:s});return n&&(d.id=n),t&&(d.className=t),i.createElement("select",d,this.getDefaultOption(),this.getCountries())}}]),e}(i.Component);b.propTypes={value:r().oneOfType([r().string,r().number]),name:r().string,id:r().string,classes:r().string,showDefaultOption:r().bool,defaultOptionLabel:r().oneOfType([r().string,r().number]),priorityOptions:r().array,onChange:r().func,onBlur:r().func,labelType:r().oneOf([u,s]),valueType:r().oneOf([u,s]),whitelist:r().array,blacklist:r().array,disabled:r().bool},b.defaultProps={value:"",name:"rcrs-country",id:"",classes:"",showDefaultOption:!0,defaultOptionLabel:"Select Country",priorityOptions:[],onChange:function(){},onBlur:function(){},labelType:u,valueType:u,whitelist:[],blacklist:[],disabled:!1};var k=function(a){function e(a){h(this,e);var n=m(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,a));return n.state={regions:n.getRegions(a.country)},n.getRegions=n.getRegions.bind(n),n}return S(e,a),c(e,[{key:"componentDidUpdate",value:function(a){var e=this.props.country;if(e!==a.country){var n=this.getRegions(e);this.setState({regions:[].concat(v(n),v(this.getCustomOptions(n)))})}}},{key:"getCustomOptions",value:function(a){var e=this.props.customOptions,n=this.getDuplicates(a);return n.length?(console.error("Error: Duplicate regions present: "+n.toString()+".\nThe above item(s) is/are already getting added to the region dropdown by the library."),[]):e.map((function(a){if(a)return{regionName:a,regionShortCode:a}}))}},{key:"getDuplicates",value:function(a){var e=this.props,n=e.customOptions,i=e.valueType===u?"regionName":"regionShortCode";return a.filter((function(a){return-1!==n.indexOf(a[i])})).map((function(a){return a[i]}))}},{key:"getRegions",value:function(a){if(!a)return[];var e=this.props,n=e.countryValueType,i=e.whitelist,t=e.blacklist,r=n===u?0:1,s=[];if(o.forEach((function(e){e[r]===a&&(s=e)})),!s||0===s.length)return console.error("Error. Unknown country passed: "+a+'. If you\'re passing a country shortcode, be sure to include countryValueType="short" on the RegionDropdown'),[];var h=function(a,e,n){var i=A(a,3),t=i[0],r=i[1],o=i[2],u=e.hasOwnProperty(r)?e[r]:[],s=n.hasOwnProperty(r)?n[r]:[],l=o.split("|");return u.length>0&&l.length>0?l=l.filter((function(a){for(var e=0,n=u.length;e<n;e++)if(a.indexOf(u[e])>-1)return!0;return!1})):s.length>0&&l.length>0&&(l=l.filter((function(a){for(var e=0,n=s.length;e<n;e++)if(a.indexOf(s[e])>-1)return!1;return!0}))),[t,r,l.join("|")]}(s,i,t);return h[2].split(l).map((function(a){var e=a.split(d),n=A(e,2),i=n[0],t=n[1];return{regionName:i,regionShortCode:void 0===t?null:t}}))}},{key:"getRegionList",value:function(){var a=this.props,e=a.labelType,n=a.valueType;return this.state.regions.map((function(a){var t=a.regionName,r=a.regionShortCode,o=e===u?t:r,s=n===u?t:r;return i.createElement("option",{value:s,key:t},o)}))}},{key:"getDefaultOption",value:function(){var a=this.props,e=a.blankOptionLabel,n=a.showDefaultOption,t=a.defaultOptionLabel;return a.country?n?i.createElement("option",{value:""},t):null:i.createElement("option",{value:""},e)}},{key:"render",value:function(){var a=this.props,e=a.value,n=a.country,t=a.onChange,r=a.onBlur,o=a.id,u=a.name,s=a.classes,l=a.disabled,d=(a.blankOptionLabel,a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.countryValueType,a.disableWhenEmpty),h=(a.customOptions,g(a,["value","country","onChange","onBlur","id","name","classes","disabled","blankOptionLabel","showDefaultOption","defaultOptionLabel","labelType","valueType","countryValueType","disableWhenEmpty","customOptions"])),c=f({},h,{name:u,value:e,onChange:function(a){return t(a.target.value,a)},onBlur:function(a){return r(a.target.value,a)},disabled:l||d&&""===n});return o&&(c.id=o),s&&(c.className=s),i.createElement("select",c,this.getDefaultOption(),this.getRegionList())}}]),e}(i.PureComponent);k.propTypes={country:r().string,countryValueType:r().oneOf([u,s]),value:r().oneOfType([r().string,r().number]),name:r().string,id:r().string,classes:r().string,blankOptionLabel:r().string,showDefaultOption:r().bool,defaultOptionLabel:r().string,onChange:r().func,onBlur:r().func,labelType:r().string,valueType:r().string,whitelist:r().object,blacklist:r().object,disabled:r().bool,disableWhenEmpty:r().bool,customOptions:r().array},k.defaultProps={country:"",value:"",name:"rcrs-region",id:"",classes:"",blankOptionLabel:"-",showDefaultOption:!0,defaultOptionLabel:"Select Region",onChange:function(){},onBlur:function(){},countryValueType:u,labelType:u,valueType:u,whitelist:{},blacklist:{},disabled:!1,disableWhenEmpty:!1,customOptions:[]}},8820:function(a,e,n){n.d(e,{Zju:function(){return t}});var i=n(9983);function t(a){return(0,i.w_)({tag:"svg",attr:{viewBox:"0 0 1024 1024"},child:[{tag:"path",attr:{d:"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 0 0 0 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"}}]})(a)}},458:function(a,e,n){n.d(e,{XXU:function(){return t}});var i=n(9983);function t(a){return(0,i.w_)({tag:"svg",attr:{viewBox:"0 0 24 24"},child:[{tag:"g",attr:{id:"Ruler"},child:[{tag:"g",attr:{},child:[{tag:"path",attr:{d:"M9.479,3.5a1.5,1.5,0,0,0-2.12,0L3.5,7.35a1.516,1.516,0,0,0-.44,1.06A1.5,1.5,0,0,0,3.5,9.47L14.519,20.5a1.509,1.509,0,0,0,2.13,0l3.85-3.86a1.491,1.491,0,0,0,0-2.12ZM8.359,7.08a.5.5,0,0,0,0,.71.524.524,0,0,0,.71,0c.55-.56,1.09-1.1,1.65-1.64l1.25,1.25-.9.9a.483.483,0,0,0,0,.7.5.5,0,0,0,.71,0c.29-.3.6-.6.9-.89l1.25,1.25-1.64,1.65a.495.495,0,0,0,.7.7c.56-.55,1.1-1.09,1.65-1.64l1.25,1.25-.9.9a.524.524,0,0,0-.14.36.5.5,0,0,0,.14.35.513.513,0,0,0,.71,0l.9-.9,1.26,1.26-1.65,1.64a.5.5,0,0,0,.71.71c.55-.56,1.09-1.1,1.65-1.64l1.23,1.23a.5.5,0,0,1,0,.7l-3.86,3.86a.5.5,0,0,1-.71,0L4.209,8.77a.491.491,0,0,1-.15-.36.485.485,0,0,1,.15-.35L8.069,4.2a.508.508,0,0,1,.7,0l1.24,1.24Z"}},{tag:"path",attr:{d:"M18.939,12.96l-.04-.04c.01,0,.01,0,.02.01S18.939,12.95,18.939,12.96Z"}}]}]}]})(a)}},6355:function(a,e,n){n.d(e,{Y2X:function(){return t}});var i=n(9983);function t(a){return(0,i.w_)({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z"}}]})(a)}},8014:function(a,e,n){n.d(e,{mjT:function(){return t}});var i=n(9983);function t(a){return(0,i.w_)({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M200.4 27.39L180.9 183h42.8l49.1-146.57-72.4-9.04zm91.7 8L242.7 183l149.7.1 34.3-102.61-134.6-45.1zM180 46.03l-71.9 7.84L122.2 183h40.7L180 46.03zM64 153c-11.5 0-19.18 8.8-21.27 17.2-1.04 4.2-.45 7.6.73 9.5 1.17 1.8 2.79 3.3 8.54 3.3h52.1l-3.3-30H64zm357.4 0l-10 30h47.5c-2.6-5-3.7-10.3-3-15.6.7-5.2 2.7-9.9 5.3-14.4h-39.8zM41 201v246.9c0 5.1 2.79 11.1 7.37 15.7C52.96 468.2 59 471 64 471l384 .1c5 0 11-2.8 15.6-7.4 4.6-4.6 7.4-10.6 7.4-15.7v-71h-87c-44 0-44-82 0-82h87v-93.9L41 201zm343 112c-20 0-20 46 0 46h22.3c-9-3.8-15.3-12.7-15.3-23s6.3-19.2 15.3-23H384zm41.7 0c9 3.8 15.3 12.7 15.3 23s-6.3 19.2-15.3 23H487v-46h-61.3zm-9.7 16c-4 0-7 3-7 7s3 7 7 7 7-3 7-7-3-7-7-7z"}}]})(a)}},71:function(a,e,n){n.d(e,{SzZ:function(){return t},UXH:function(){return r}});var i=n(9983);function t(a){return(0,i.w_)({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M432 224V96a16 16 0 00-16-16H96a16 16 0 00-16 16v128a48 48 0 00-48 48v160h36v-32h376v32h36V272a48 48 0 00-48-48zm-192 0H120v-32a16 16 0 0116-16h88a16 16 0 0116 16zm32-32a16 16 0 0116-16h88a16 16 0 0116 16v32H272z"}}]})(a)}function r(a){return(0,i.w_)({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256 32C167.67 32 96 96.51 96 176c0 128 160 304 160 304s160-176 160-304c0-79.49-71.67-144-160-144zm0 224a64 64 0 1164-64 64.07 64.07 0 01-64 64z"}}]})(a)}},7781:function(){},1771:function(a,e,n){n.d(e,{j:function(){return l}});var i=n(5671),t=n(3144),r=n(136),o=n(7277),u=n(5511),s=n(3734),l=new(function(a){(0,r.Z)(n,a);var e=(0,o.Z)(n);function n(){var a;return(0,i.Z)(this,n),(a=e.call(this)).setup=function(a){if(!s.sk&&window.addEventListener){var e=function(){return a()};return window.addEventListener("visibilitychange",e,!1),window.addEventListener("focus",e,!1),function(){window.removeEventListener("visibilitychange",e),window.removeEventListener("focus",e)}}},a}return(0,t.Z)(n,[{key:"onSubscribe",value:function(){this.cleanup||this.setEventListener(this.setup)}},{key:"onUnsubscribe",value:function(){var a;this.hasListeners()||(null==(a=this.cleanup)||a.call(this),this.cleanup=void 0)}},{key:"setEventListener",value:function(a){var e,n=this;this.setup=a,null==(e=this.cleanup)||e.call(this),this.cleanup=a((function(a){"boolean"===typeof a?n.setFocused(a):n.onFocus()}))}},{key:"setFocused",value:function(a){this.focused=a,a&&this.onFocus()}},{key:"onFocus",value:function(){this.listeners.forEach((function(a){a()}))}},{key:"isFocused",value:function(){return"boolean"===typeof this.focused?this.focused:"undefined"===typeof document||[void 0,"visible","prerender"].includes(document.visibilityState)}}]),n}(u.l))},5844:function(a,e,n){n.d(e,{_:function(){return i}});var i=console},9054:function(a,e,n){n.d(e,{R:function(){return g},m:function(){return S}});var i=n(4165),t=n(5861),r=n(1413),o=n(5671),u=n(3144),s=n(136),l=n(7277),d=n(5844),h=n(9538),c=n(7069),f=n(3075),S=function(a){(0,s.Z)(n,a);var e=(0,l.Z)(n);function n(a){var i;return(0,o.Z)(this,n),(i=e.call(this)).defaultOptions=a.defaultOptions,i.mutationId=a.mutationId,i.mutationCache=a.mutationCache,i.logger=a.logger||d._,i.observers=[],i.state=a.state||g(),i.setOptions(a.options),i.scheduleGc(),i}return(0,u.Z)(n,[{key:"setOptions",value:function(a){this.options=(0,r.Z)((0,r.Z)({},this.defaultOptions),a),this.updateCacheTime(this.options.cacheTime)}},{key:"meta",get:function(){return this.options.meta}},{key:"setState",value:function(a){this.dispatch({type:"setState",state:a})}},{key:"addObserver",value:function(a){-1===this.observers.indexOf(a)&&(this.observers.push(a),this.clearGcTimeout(),this.mutationCache.notify({type:"observerAdded",mutation:this,observer:a}))}},{key:"removeObserver",value:function(a){this.observers=this.observers.filter((function(e){return e!==a})),this.scheduleGc(),this.mutationCache.notify({type:"observerRemoved",mutation:this,observer:a})}},{key:"optionalRemove",value:function(){this.observers.length||("loading"===this.state.status?this.scheduleGc():this.mutationCache.remove(this))}},{key:"continue",value:function(){var a,e;return null!=(a=null==(e=this.retryer)?void 0:e.continue())?a:this.execute()}},{key:"execute",value:function(){var a=(0,t.Z)((0,i.Z)().mark((function a(){var e,n,t,r,o,u,s,l,d,h,c,S,g,m,A,v,y,b,k,p,M,C,B,N,K=this;return(0,i.Z)().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:if(e=function(){var a;return K.retryer=(0,f.Mz)({fn:function(){return K.options.mutationFn?K.options.mutationFn(K.state.variables):Promise.reject("No mutationFn found")},onFail:function(a,e){K.dispatch({type:"failed",failureCount:a,error:e})},onPause:function(){K.dispatch({type:"pause"})},onContinue:function(){K.dispatch({type:"continue"})},retry:null!=(a=K.options.retry)?a:0,retryDelay:K.options.retryDelay,networkMode:K.options.networkMode}),K.retryer.promise},n="loading"===this.state.status,a.prev=2,n){a.next=11;break}return this.dispatch({type:"loading",variables:this.options.variables}),a.next=7,null==(c=(S=this.mutationCache.config).onMutate)?void 0:c.call(S,this.state.variables,this);case 7:return a.next=9,null==(g=(m=this.options).onMutate)?void 0:g.call(m,this.state.variables);case 9:(A=a.sent)!==this.state.context&&this.dispatch({type:"loading",context:A,variables:this.state.variables});case 11:return a.next=13,e();case 13:return v=a.sent,a.next=16,null==(t=(r=this.mutationCache.config).onSuccess)?void 0:t.call(r,v,this.state.variables,this.state.context,this);case 16:return a.next=18,null==(o=(u=this.options).onSuccess)?void 0:o.call(u,v,this.state.variables,this.state.context);case 18:return a.next=20,null==(s=(l=this.mutationCache.config).onSettled)?void 0:s.call(l,v,null,this.state.variables,this.state.context,this);case 20:return a.next=22,null==(d=(h=this.options).onSettled)?void 0:d.call(h,v,null,this.state.variables,this.state.context);case 22:return this.dispatch({type:"success",data:v}),a.abrupt("return",v);case 26:return a.prev=26,a.t0=a.catch(2),a.prev=28,a.next=31,null==(y=(b=this.mutationCache.config).onError)?void 0:y.call(b,a.t0,this.state.variables,this.state.context,this);case 31:return a.next=34,null==(k=(p=this.options).onError)?void 0:k.call(p,a.t0,this.state.variables,this.state.context);case 34:return a.next=36,null==(M=(C=this.mutationCache.config).onSettled)?void 0:M.call(C,void 0,a.t0,this.state.variables,this.state.context,this);case 36:return a.next=38,null==(B=(N=this.options).onSettled)?void 0:B.call(N,void 0,a.t0,this.state.variables,this.state.context);case 38:throw a.t0;case 39:return a.prev=39,this.dispatch({type:"error",error:a.t0}),a.finish(39);case 42:case"end":return a.stop()}}),a,this,[[2,26],[28,,39,42]])})));return function(){return a.apply(this,arguments)}}()},{key:"dispatch",value:function(a){var e=this;this.state=function(n){switch(a.type){case"failed":return(0,r.Z)((0,r.Z)({},n),{},{failureCount:a.failureCount,failureReason:a.error});case"pause":return(0,r.Z)((0,r.Z)({},n),{},{isPaused:!0});case"continue":return(0,r.Z)((0,r.Z)({},n),{},{isPaused:!1});case"loading":return(0,r.Z)((0,r.Z)({},n),{},{context:a.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:!(0,f.Kw)(e.options.networkMode),status:"loading",variables:a.variables});case"success":return(0,r.Z)((0,r.Z)({},n),{},{data:a.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1});case"error":return(0,r.Z)((0,r.Z)({},n),{},{data:void 0,error:a.error,failureCount:n.failureCount+1,failureReason:a.error,isPaused:!1,status:"error"});case"setState":return(0,r.Z)((0,r.Z)({},n),a.state)}}(this.state),h.V.batch((function(){e.observers.forEach((function(e){e.onMutationUpdate(a)})),e.mutationCache.notify({mutation:e,type:"updated",action:a})}))}}]),n}(c.F);function g(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0}}},9538:function(a,e,n){n.d(e,{V:function(){return t}});var i=n(3734);var t=function(){var a=[],e=0,n=function(a){a()},t=function(a){a()},r=function(t){e?a.push(t):(0,i.A4)((function(){n(t)}))},o=function(){var e=a;a=[],e.length&&(0,i.A4)((function(){t((function(){e.forEach((function(a){n(a)}))}))}))};return{batch:function(a){var n;e++;try{n=a()}finally{--e||o()}return n},batchCalls:function(a){return function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];r((function(){a.apply(void 0,n)}))}},schedule:r,setNotifyFunction:function(a){n=a},setBatchNotifyFunction:function(a){t=a}}}()},7087:function(a,e,n){n.d(e,{N:function(){return l}});var i=n(5671),t=n(3144),r=n(136),o=n(7277),u=n(5511),s=n(3734),l=new(function(a){(0,r.Z)(n,a);var e=(0,o.Z)(n);function n(){var a;return(0,i.Z)(this,n),(a=e.call(this)).setup=function(a){if(!s.sk&&window.addEventListener){var e=function(){return a()};return window.addEventListener("online",e,!1),window.addEventListener("offline",e,!1),function(){window.removeEventListener("online",e),window.removeEventListener("offline",e)}}},a}return(0,t.Z)(n,[{key:"onSubscribe",value:function(){this.cleanup||this.setEventListener(this.setup)}},{key:"onUnsubscribe",value:function(){var a;this.hasListeners()||(null==(a=this.cleanup)||a.call(this),this.cleanup=void 0)}},{key:"setEventListener",value:function(a){var e,n=this;this.setup=a,null==(e=this.cleanup)||e.call(this),this.cleanup=a((function(a){"boolean"===typeof a?n.setOnline(a):n.onOnline()}))}},{key:"setOnline",value:function(a){this.online=a,a&&this.onOnline()}},{key:"onOnline",value:function(){this.listeners.forEach((function(a){a()}))}},{key:"isOnline",value:function(){return"boolean"===typeof this.online?this.online:"undefined"===typeof navigator||"undefined"===typeof navigator.onLine||navigator.onLine}}]),n}(u.l))},9134:function(a,e,n){n.d(e,{S:function(){return N}});var i=n(1413),t=n(9439),r=n(5671),o=n(3144),u=n(3734),s=n(136),l=n(7277),d=n(1752),h=n(1120),c=n(5844),f=n(9538),S=n(3075),g=function(a){(0,s.Z)(n,a);var e=(0,l.Z)(n);function n(a){var i;return(0,r.Z)(this,n),(i=e.call(this)).abortSignalConsumed=!1,i.defaultOptions=a.defaultOptions,i.setOptions(a.options),i.observers=[],i.cache=a.cache,i.logger=a.logger||c._,i.queryKey=a.queryKey,i.queryHash=a.queryHash,i.initialState=a.state||function(a){var e="function"===typeof a.initialData?a.initialData():a.initialData,n="undefined"!==typeof e,i=n?"function"===typeof a.initialDataUpdatedAt?a.initialDataUpdatedAt():a.initialDataUpdatedAt:0;return{data:e,dataUpdateCount:0,dataUpdatedAt:n?null!=i?i:Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:null,isInvalidated:!1,status:n?"success":"loading",fetchStatus:"idle"}}(i.options),i.state=i.initialState,i.scheduleGc(),i}return(0,o.Z)(n,[{key:"meta",get:function(){return this.options.meta}},{key:"setOptions",value:function(a){this.options=(0,i.Z)((0,i.Z)({},this.defaultOptions),a),this.updateCacheTime(this.options.cacheTime)}},{key:"optionalRemove",value:function(){this.observers.length||"idle"!==this.state.fetchStatus||this.cache.remove(this)}},{key:"setData",value:function(a,e){var n=(0,u.oE)(this.state.data,a,this.options);return this.dispatch({data:n,type:"success",dataUpdatedAt:null==e?void 0:e.updatedAt,manual:null==e?void 0:e.manual}),n}},{key:"setState",value:function(a,e){this.dispatch({type:"setState",state:a,setStateOptions:e})}},{key:"cancel",value:function(a){var e,n=this.promise;return null==(e=this.retryer)||e.cancel(a),n?n.then(u.ZT).catch(u.ZT):Promise.resolve()}},{key:"destroy",value:function(){(0,d.Z)((0,h.Z)(n.prototype),"destroy",this).call(this),this.cancel({silent:!0})}},{key:"reset",value:function(){this.destroy(),this.setState(this.initialState)}},{key:"isActive",value:function(){return this.observers.some((function(a){return!1!==a.options.enabled}))}},{key:"isDisabled",value:function(){return this.getObserversCount()>0&&!this.isActive()}},{key:"isStale",value:function(){return this.state.isInvalidated||!this.state.dataUpdatedAt||this.observers.some((function(a){return a.getCurrentResult().isStale}))}},{key:"isStaleByTime",value:function(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this.state.isInvalidated||!this.state.dataUpdatedAt||!(0,u.Kp)(this.state.dataUpdatedAt,a)}},{key:"onFocus",value:function(){var a,e=this.observers.find((function(a){return a.shouldFetchOnWindowFocus()}));e&&e.refetch({cancelRefetch:!1}),null==(a=this.retryer)||a.continue()}},{key:"onOnline",value:function(){var a,e=this.observers.find((function(a){return a.shouldFetchOnReconnect()}));e&&e.refetch({cancelRefetch:!1}),null==(a=this.retryer)||a.continue()}},{key:"addObserver",value:function(a){-1===this.observers.indexOf(a)&&(this.observers.push(a),this.clearGcTimeout(),this.cache.notify({type:"observerAdded",query:this,observer:a}))}},{key:"removeObserver",value:function(a){-1!==this.observers.indexOf(a)&&(this.observers=this.observers.filter((function(e){return e!==a})),this.observers.length||(this.retryer&&(this.abortSignalConsumed?this.retryer.cancel({revert:!0}):this.retryer.cancelRetry()),this.scheduleGc()),this.cache.notify({type:"observerRemoved",query:this,observer:a}))}},{key:"getObserversCount",value:function(){return this.observers.length}},{key:"invalidate",value:function(){this.state.isInvalidated||this.dispatch({type:"invalidate"})}},{key:"fetch",value:function(a,e){var n,i,t=this;if("idle"!==this.state.fetchStatus)if(this.state.dataUpdatedAt&&null!=e&&e.cancelRefetch)this.cancel({silent:!0});else if(this.promise){var r;return null==(r=this.retryer)||r.continueRetry(),this.promise}if(a&&this.setOptions(a),!this.options.queryFn){var o=this.observers.find((function(a){return a.options.queryFn}));o&&this.setOptions(o.options)}Array.isArray(this.options.queryKey);var s=(0,u.G9)(),l={queryKey:this.queryKey,pageParam:void 0,meta:this.meta},d=function(a){Object.defineProperty(a,"signal",{enumerable:!0,get:function(){if(s)return t.abortSignalConsumed=!0,s.signal}})};d(l);var h,c={fetchOptions:e,options:this.options,queryKey:this.queryKey,state:this.state,fetchFn:function(){return t.options.queryFn?(t.abortSignalConsumed=!1,t.options.queryFn(l)):Promise.reject("Missing queryFn")}};(d(c),null==(n=this.options.behavior)||n.onFetch(c),this.revertState=this.state,"idle"===this.state.fetchStatus||this.state.fetchMeta!==(null==(i=c.fetchOptions)?void 0:i.meta))&&this.dispatch({type:"fetch",meta:null==(h=c.fetchOptions)?void 0:h.meta});var f=function(a){var e,n,i,r;((0,S.DV)(a)&&a.silent||t.dispatch({type:"error",error:a}),(0,S.DV)(a))||(null==(e=(n=t.cache.config).onError)||e.call(n,a,t),null==(i=(r=t.cache.config).onSettled)||i.call(r,t.state.data,a,t));t.isFetchingOptimistic||t.scheduleGc(),t.isFetchingOptimistic=!1};return this.retryer=(0,S.Mz)({fn:c.fetchFn,abort:null==s?void 0:s.abort.bind(s),onSuccess:function(a){var e,n,i,r;"undefined"!==typeof a?(t.setData(a),null==(e=(n=t.cache.config).onSuccess)||e.call(n,a,t),null==(i=(r=t.cache.config).onSettled)||i.call(r,a,t.state.error,t),t.isFetchingOptimistic||t.scheduleGc(),t.isFetchingOptimistic=!1):f(new Error("undefined"))},onError:f,onFail:function(a,e){t.dispatch({type:"failed",failureCount:a,error:e})},onPause:function(){t.dispatch({type:"pause"})},onContinue:function(){t.dispatch({type:"continue"})},retry:c.options.retry,retryDelay:c.options.retryDelay,networkMode:c.options.networkMode}),this.promise=this.retryer.promise,this.promise}},{key:"dispatch",value:function(a){var e=this;this.state=function(n){var t,r;switch(a.type){case"failed":return(0,i.Z)((0,i.Z)({},n),{},{fetchFailureCount:a.failureCount,fetchFailureReason:a.error});case"pause":return(0,i.Z)((0,i.Z)({},n),{},{fetchStatus:"paused"});case"continue":return(0,i.Z)((0,i.Z)({},n),{},{fetchStatus:"fetching"});case"fetch":return(0,i.Z)((0,i.Z)({},n),{},{fetchFailureCount:0,fetchFailureReason:null,fetchMeta:null!=(t=a.meta)?t:null,fetchStatus:(0,S.Kw)(e.options.networkMode)?"fetching":"paused"},!n.dataUpdatedAt&&{error:null,status:"loading"});case"success":return(0,i.Z)((0,i.Z)({},n),{},{data:a.data,dataUpdateCount:n.dataUpdateCount+1,dataUpdatedAt:null!=(r=a.dataUpdatedAt)?r:Date.now(),error:null,isInvalidated:!1,status:"success"},!a.manual&&{fetchStatus:"idle",fetchFailureCount:0,fetchFailureReason:null});case"error":var o=a.error;return(0,S.DV)(o)&&o.revert&&e.revertState?(0,i.Z)({},e.revertState):(0,i.Z)((0,i.Z)({},n),{},{error:o,errorUpdateCount:n.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:n.fetchFailureCount+1,fetchFailureReason:o,fetchStatus:"idle",status:"error"});case"invalidate":return(0,i.Z)((0,i.Z)({},n),{},{isInvalidated:!0});case"setState":return(0,i.Z)((0,i.Z)({},n),a.state)}}(this.state),f.V.batch((function(){e.observers.forEach((function(e){e.onQueryUpdate(a)})),e.cache.notify({query:e,type:"updated",action:a})}))}}]),n}(n(7069).F);var m=n(5511),A=function(a){(0,s.Z)(n,a);var e=(0,l.Z)(n);function n(a){var i;return(0,r.Z)(this,n),(i=e.call(this)).config=a||{},i.queries=[],i.queriesMap={},i}return(0,o.Z)(n,[{key:"build",value:function(a,e,n){var i,t=e.queryKey,r=null!=(i=e.queryHash)?i:(0,u.Rm)(t,e),o=this.get(r);return o||(o=new g({cache:this,logger:a.getLogger(),queryKey:t,queryHash:r,options:a.defaultQueryOptions(e),state:n,defaultOptions:a.getQueryDefaults(t)}),this.add(o)),o}},{key:"add",value:function(a){this.queriesMap[a.queryHash]||(this.queriesMap[a.queryHash]=a,this.queries.push(a),this.notify({type:"added",query:a}))}},{key:"remove",value:function(a){var e=this.queriesMap[a.queryHash];e&&(a.destroy(),this.queries=this.queries.filter((function(e){return e!==a})),e===a&&delete this.queriesMap[a.queryHash],this.notify({type:"removed",query:a}))}},{key:"clear",value:function(){var a=this;f.V.batch((function(){a.queries.forEach((function(e){a.remove(e)}))}))}},{key:"get",value:function(a){return this.queriesMap[a]}},{key:"getAll",value:function(){return this.queries}},{key:"find",value:function(a,e){var n=(0,u.I6)(a,e),i=(0,t.Z)(n,1)[0];return"undefined"===typeof i.exact&&(i.exact=!0),this.queries.find((function(a){return(0,u._x)(i,a)}))}},{key:"findAll",value:function(a,e){var n=(0,u.I6)(a,e),i=(0,t.Z)(n,1)[0];return Object.keys(i).length>0?this.queries.filter((function(a){return(0,u._x)(i,a)})):this.queries}},{key:"notify",value:function(a){var e=this;f.V.batch((function(){e.listeners.forEach((function(e){e(a)}))}))}},{key:"onFocus",value:function(){var a=this;f.V.batch((function(){a.queries.forEach((function(a){a.onFocus()}))}))}},{key:"onOnline",value:function(){var a=this;f.V.batch((function(){a.queries.forEach((function(a){a.onOnline()}))}))}}]),n}(m.l),v=n(9054),y=function(a){(0,s.Z)(n,a);var e=(0,l.Z)(n);function n(a){var i;return(0,r.Z)(this,n),(i=e.call(this)).config=a||{},i.mutations=[],i.mutationId=0,i}return(0,o.Z)(n,[{key:"build",value:function(a,e,n){var i=new v.m({mutationCache:this,logger:a.getLogger(),mutationId:++this.mutationId,options:a.defaultMutationOptions(e),state:n,defaultOptions:e.mutationKey?a.getMutationDefaults(e.mutationKey):void 0});return this.add(i),i}},{key:"add",value:function(a){this.mutations.push(a),this.notify({type:"added",mutation:a})}},{key:"remove",value:function(a){this.mutations=this.mutations.filter((function(e){return e!==a})),this.notify({type:"removed",mutation:a})}},{key:"clear",value:function(){var a=this;f.V.batch((function(){a.mutations.forEach((function(e){a.remove(e)}))}))}},{key:"getAll",value:function(){return this.mutations}},{key:"find",value:function(a){return"undefined"===typeof a.exact&&(a.exact=!0),this.mutations.find((function(e){return(0,u.X7)(a,e)}))}},{key:"findAll",value:function(a){return this.mutations.filter((function(e){return(0,u.X7)(a,e)}))}},{key:"notify",value:function(a){var e=this;f.V.batch((function(){e.listeners.forEach((function(e){e(a)}))}))}},{key:"resumePausedMutations",value:function(){var a,e=this;return this.resuming=(null!=(a=this.resuming)?a:Promise.resolve()).then((function(){var a=e.mutations.filter((function(a){return a.state.isPaused}));return f.V.batch((function(){return a.reduce((function(a,e){return a.then((function(){return e.continue().catch(u.ZT)}))}),Promise.resolve())}))})).then((function(){e.resuming=void 0})),this.resuming}}]),n}(m.l),b=n(1771),k=n(7087),p=n(3433);function M(){return{onFetch:function(a){a.fetchFn=function(){var e,n,i,t,r,o,u,s=null==(e=a.fetchOptions)||null==(n=e.meta)?void 0:n.refetchPage,l=null==(i=a.fetchOptions)||null==(t=i.meta)?void 0:t.fetchMore,d=null==l?void 0:l.pageParam,h="forward"===(null==l?void 0:l.direction),c="backward"===(null==l?void 0:l.direction),f=(null==(r=a.state.data)?void 0:r.pages)||[],S=(null==(o=a.state.data)?void 0:o.pageParams)||[],g=S,m=!1,A=a.options.queryFn||function(){return Promise.reject("Missing queryFn")},v=function(a,e,n,i){return g=i?[e].concat((0,p.Z)(g)):[].concat((0,p.Z)(g),[e]),i?[n].concat((0,p.Z)(a)):[].concat((0,p.Z)(a),[n])},y=function(e,n,i,t){if(m)return Promise.reject("Cancelled");if("undefined"===typeof i&&!n&&e.length)return Promise.resolve(e);var r,o={queryKey:a.queryKey,pageParam:i,meta:a.options.meta};r=o,Object.defineProperty(r,"signal",{enumerable:!0,get:function(){var e,n;return null!=(e=a.signal)&&e.aborted?m=!0:null==(n=a.signal)||n.addEventListener("abort",(function(){m=!0})),a.signal}});var u=A(o);return Promise.resolve(u).then((function(a){return v(e,i,a,t)}))};if(f.length)if(h){var b="undefined"!==typeof d,k=b?d:C(a.options,f);u=y(f,b,k)}else if(c){var M="undefined"!==typeof d,N=M?d:B(a.options,f);u=y(f,M,N,!0)}else{g=[];var K="undefined"===typeof a.options.getNextPageParam,T=!s||!f[0]||s(f[0],0,f);u=T?y([],K,S[0]):Promise.resolve(v([],S[0],f[0]));for(var P=function(e){u=u.then((function(n){if(!s||!f[e]||s(f[e],e,f)){var i=K?S[e]:C(a.options,n);return y(n,K,i)}return Promise.resolve(v(n,S[e],f[e]))}))},O=1;O<f.length;O++)P(O)}else u=y([]);return u.then((function(a){return{pages:a,pageParams:g}}))}}}}function C(a,e){return null==a.getNextPageParam?void 0:a.getNextPageParam(e[e.length-1],e)}function B(a,e){return null==a.getPreviousPageParam?void 0:a.getPreviousPageParam(e[0],e)}var N=function(){function a(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,r.Z)(this,a),this.queryCache=e.queryCache||new A,this.mutationCache=e.mutationCache||new y,this.logger=e.logger||c._,this.defaultOptions=e.defaultOptions||{},this.queryDefaults=[],this.mutationDefaults=[],this.mountCount=0}return(0,o.Z)(a,[{key:"mount",value:function(){var a=this;this.mountCount++,1===this.mountCount&&(this.unsubscribeFocus=b.j.subscribe((function(){b.j.isFocused()&&(a.resumePausedMutations(),a.queryCache.onFocus())})),this.unsubscribeOnline=k.N.subscribe((function(){k.N.isOnline()&&(a.resumePausedMutations(),a.queryCache.onOnline())})))}},{key:"unmount",value:function(){var a,e;this.mountCount--,0===this.mountCount&&(null==(a=this.unsubscribeFocus)||a.call(this),this.unsubscribeFocus=void 0,null==(e=this.unsubscribeOnline)||e.call(this),this.unsubscribeOnline=void 0)}},{key:"isFetching",value:function(a,e){var n=(0,u.I6)(a,e),i=(0,t.Z)(n,1)[0];return i.fetchStatus="fetching",this.queryCache.findAll(i).length}},{key:"isMutating",value:function(a){return this.mutationCache.findAll((0,i.Z)((0,i.Z)({},a),{},{fetching:!0})).length}},{key:"getQueryData",value:function(a,e){var n;return null==(n=this.queryCache.find(a,e))?void 0:n.state.data}},{key:"ensureQueryData",value:function(a,e,n){var i=(0,u._v)(a,e,n),t=this.getQueryData(i.queryKey);return t?Promise.resolve(t):this.fetchQuery(i)}},{key:"getQueriesData",value:function(a){return this.getQueryCache().findAll(a).map((function(a){return[a.queryKey,a.state.data]}))}},{key:"setQueryData",value:function(a,e,n){var t=this.queryCache.find(a),r=null==t?void 0:t.state.data,o=(0,u.SE)(e,r);if("undefined"!==typeof o){var s=(0,u._v)(a),l=this.defaultQueryOptions(s);return this.queryCache.build(this,l).setData(o,(0,i.Z)((0,i.Z)({},n),{},{manual:!0}))}}},{key:"setQueriesData",value:function(a,e,n){var i=this;return f.V.batch((function(){return i.getQueryCache().findAll(a).map((function(a){var t=a.queryKey;return[t,i.setQueryData(t,e,n)]}))}))}},{key:"getQueryState",value:function(a,e){var n;return null==(n=this.queryCache.find(a,e))?void 0:n.state}},{key:"removeQueries",value:function(a,e){var n=(0,u.I6)(a,e),i=(0,t.Z)(n,1)[0],r=this.queryCache;f.V.batch((function(){r.findAll(i).forEach((function(a){r.remove(a)}))}))}},{key:"resetQueries",value:function(a,e,n){var r=this,o=(0,u.I6)(a,e,n),s=(0,t.Z)(o,2),l=s[0],d=s[1],h=this.queryCache,c=(0,i.Z)({type:"active"},l);return f.V.batch((function(){return h.findAll(l).forEach((function(a){a.reset()})),r.refetchQueries(c,d)}))}},{key:"cancelQueries",value:function(a,e,n){var i=this,r=(0,u.I6)(a,e,n),o=(0,t.Z)(r,2),s=o[0],l=o[1],d=void 0===l?{}:l;"undefined"===typeof d.revert&&(d.revert=!0);var h=f.V.batch((function(){return i.queryCache.findAll(s).map((function(a){return a.cancel(d)}))}));return Promise.all(h).then(u.ZT).catch(u.ZT)}},{key:"invalidateQueries",value:function(a,e,n){var r=this,o=(0,u.I6)(a,e,n),s=(0,t.Z)(o,2),l=s[0],d=s[1];return f.V.batch((function(){var a,e;if(r.queryCache.findAll(l).forEach((function(a){a.invalidate()})),"none"===l.refetchType)return Promise.resolve();var n=(0,i.Z)((0,i.Z)({},l),{},{type:null!=(a=null!=(e=l.refetchType)?e:l.type)?a:"active"});return r.refetchQueries(n,d)}))}},{key:"refetchQueries",value:function(a,e,n){var r=this,o=(0,u.I6)(a,e,n),s=(0,t.Z)(o,2),l=s[0],d=s[1],h=f.V.batch((function(){return r.queryCache.findAll(l).filter((function(a){return!a.isDisabled()})).map((function(a){var e;return a.fetch(void 0,(0,i.Z)((0,i.Z)({},d),{},{cancelRefetch:null==(e=null==d?void 0:d.cancelRefetch)||e,meta:{refetchPage:l.refetchPage}}))}))})),c=Promise.all(h).then(u.ZT);return null!=d&&d.throwOnError||(c=c.catch(u.ZT)),c}},{key:"fetchQuery",value:function(a,e,n){var i=(0,u._v)(a,e,n),t=this.defaultQueryOptions(i);"undefined"===typeof t.retry&&(t.retry=!1);var r=this.queryCache.build(this,t);return r.isStaleByTime(t.staleTime)?r.fetch(t):Promise.resolve(r.state.data)}},{key:"prefetchQuery",value:function(a,e,n){return this.fetchQuery(a,e,n).then(u.ZT).catch(u.ZT)}},{key:"fetchInfiniteQuery",value:function(a,e,n){var i=(0,u._v)(a,e,n);return i.behavior=M(),this.fetchQuery(i)}},{key:"prefetchInfiniteQuery",value:function(a,e,n){return this.fetchInfiniteQuery(a,e,n).then(u.ZT).catch(u.ZT)}},{key:"resumePausedMutations",value:function(){return this.mutationCache.resumePausedMutations()}},{key:"getQueryCache",value:function(){return this.queryCache}},{key:"getMutationCache",value:function(){return this.mutationCache}},{key:"getLogger",value:function(){return this.logger}},{key:"getDefaultOptions",value:function(){return this.defaultOptions}},{key:"setDefaultOptions",value:function(a){this.defaultOptions=a}},{key:"setQueryDefaults",value:function(a,e){var n=this.queryDefaults.find((function(e){return(0,u.yF)(a)===(0,u.yF)(e.queryKey)}));n?n.defaultOptions=e:this.queryDefaults.push({queryKey:a,defaultOptions:e})}},{key:"getQueryDefaults",value:function(a){if(a){var e=this.queryDefaults.find((function(e){return(0,u.to)(a,e.queryKey)}));return null==e?void 0:e.defaultOptions}}},{key:"setMutationDefaults",value:function(a,e){var n=this.mutationDefaults.find((function(e){return(0,u.yF)(a)===(0,u.yF)(e.mutationKey)}));n?n.defaultOptions=e:this.mutationDefaults.push({mutationKey:a,defaultOptions:e})}},{key:"getMutationDefaults",value:function(a){if(a){var e=this.mutationDefaults.find((function(e){return(0,u.to)(a,e.mutationKey)}));return null==e?void 0:e.defaultOptions}}},{key:"defaultQueryOptions",value:function(a){if(null!=a&&a._defaulted)return a;var e=(0,i.Z)((0,i.Z)((0,i.Z)((0,i.Z)({},this.defaultOptions.queries),this.getQueryDefaults(null==a?void 0:a.queryKey)),a),{},{_defaulted:!0});return!e.queryHash&&e.queryKey&&(e.queryHash=(0,u.Rm)(e.queryKey,e)),"undefined"===typeof e.refetchOnReconnect&&(e.refetchOnReconnect="always"!==e.networkMode),"undefined"===typeof e.useErrorBoundary&&(e.useErrorBoundary=!!e.suspense),e}},{key:"defaultMutationOptions",value:function(a){return null!=a&&a._defaulted?a:(0,i.Z)((0,i.Z)((0,i.Z)((0,i.Z)({},this.defaultOptions.mutations),this.getMutationDefaults(null==a?void 0:a.mutationKey)),a),{},{_defaulted:!0})}},{key:"clear",value:function(){this.queryCache.clear(),this.mutationCache.clear()}}]),a}()},7069:function(a,e,n){n.d(e,{F:function(){return o}});var i=n(5671),t=n(3144),r=n(3734),o=function(){function a(){(0,i.Z)(this,a)}return(0,t.Z)(a,[{key:"destroy",value:function(){this.clearGcTimeout()}},{key:"scheduleGc",value:function(){var a=this;this.clearGcTimeout(),(0,r.PN)(this.cacheTime)&&(this.gcTimeout=setTimeout((function(){a.optionalRemove()}),this.cacheTime))}},{key:"updateCacheTime",value:function(a){this.cacheTime=Math.max(this.cacheTime||0,null!=a?a:r.sk?1/0:3e5)}},{key:"clearGcTimeout",value:function(){this.gcTimeout&&(clearTimeout(this.gcTimeout),this.gcTimeout=void 0)}}]),a}()},3075:function(a,e,n){n.d(e,{DV:function(){return h},Kw:function(){return l},Mz:function(){return c}});var i=n(3144),t=n(5671),r=n(1771),o=n(7087),u=n(3734);function s(a){return Math.min(1e3*Math.pow(2,a),3e4)}function l(a){return"online"!==(null!=a?a:"online")||o.N.isOnline()}var d=(0,i.Z)((function a(e){(0,t.Z)(this,a),this.revert=null==e?void 0:e.revert,this.silent=null==e?void 0:e.silent}));function h(a){return a instanceof d}function c(a){var e,n,i,t=!1,h=0,c=!1,f=new Promise((function(a,e){n=a,i=e})),S=function(){return!r.j.isFocused()||"always"!==a.networkMode&&!o.N.isOnline()},g=function(i){c||(c=!0,null==a.onSuccess||a.onSuccess(i),null==e||e(),n(i))},m=function(n){c||(c=!0,null==a.onError||a.onError(n),null==e||e(),i(n))},A=function(){return new Promise((function(n){e=function(a){var e=c||!S();return e&&n(a),e},null==a.onPause||a.onPause()})).then((function(){e=void 0,c||null==a.onContinue||a.onContinue()}))},v=function e(){if(!c){var n;try{n=a.fn()}catch(i){n=Promise.reject(i)}Promise.resolve(n).then(g).catch((function(n){var i,r;if(!c){var o=null!=(i=a.retry)?i:3,l=null!=(r=a.retryDelay)?r:s,d="function"===typeof l?l(h,n):l,f=!0===o||"number"===typeof o&&h<o||"function"===typeof o&&o(h,n);!t&&f?(h++,null==a.onFail||a.onFail(h,n),(0,u.Gh)(d).then((function(){if(S())return A()})).then((function(){t?m(n):e()}))):m(n)}}))}};return l(a.networkMode)?v():A().then(v),{promise:f,cancel:function(e){c||(m(new d(e)),null==a.abort||a.abort())},continue:function(){return(null==e?void 0:e())?f:Promise.resolve()},cancelRetry:function(){t=!0},continueRetry:function(){t=!1}}}},5511:function(a,e,n){n.d(e,{l:function(){return r}});var i=n(5671),t=n(3144),r=function(){function a(){(0,i.Z)(this,a),this.listeners=[],this.subscribe=this.subscribe.bind(this)}return(0,t.Z)(a,[{key:"subscribe",value:function(a){var e=this;return this.listeners.push(a),this.onSubscribe(),function(){e.listeners=e.listeners.filter((function(e){return e!==a})),e.onUnsubscribe()}}},{key:"hasListeners",value:function(){return this.listeners.length>0}},{key:"onSubscribe",value:function(){}},{key:"onUnsubscribe",value:function(){}}]),a}()},3734:function(a,e,n){n.d(e,{A4:function(){return B},G9:function(){return N},Gh:function(){return C},I6:function(){return h},Kp:function(){return s},PN:function(){return u},Rm:function(){return S},SE:function(){return o},VS:function(){return y},X7:function(){return f},ZT:function(){return r},_v:function(){return l},_x:function(){return c},lV:function(){return d},oE:function(){return K},sk:function(){return t},to:function(){return m},yF:function(){return g}});var i=n(1413),t="undefined"===typeof window||"Deno"in window;function r(){}function o(a,e){return"function"===typeof a?a(e):a}function u(a){return"number"===typeof a&&a>=0&&a!==1/0}function s(a,e){return Math.max(a+(e||0)-Date.now(),0)}function l(a,e,n){return M(a)?"function"===typeof e?(0,i.Z)((0,i.Z)({},n),{},{queryKey:a,queryFn:e}):(0,i.Z)((0,i.Z)({},e),{},{queryKey:a}):a}function d(a,e,n){return M(a)?"function"===typeof e?(0,i.Z)((0,i.Z)({},n),{},{mutationKey:a,mutationFn:e}):(0,i.Z)((0,i.Z)({},e),{},{mutationKey:a}):"function"===typeof a?(0,i.Z)((0,i.Z)({},e),{},{mutationFn:a}):(0,i.Z)({},a)}function h(a,e,n){return M(a)?[(0,i.Z)((0,i.Z)({},e),{},{queryKey:a}),n]:[a||{},e]}function c(a,e){var n=a.type,i=void 0===n?"all":n,t=a.exact,r=a.fetchStatus,o=a.predicate,u=a.queryKey,s=a.stale;if(M(u))if(t){if(e.queryHash!==S(u,e.options))return!1}else if(!m(e.queryKey,u))return!1;if("all"!==i){var l=e.isActive();if("active"===i&&!l)return!1;if("inactive"===i&&l)return!1}return("boolean"!==typeof s||e.isStale()===s)&&(("undefined"===typeof r||r===e.state.fetchStatus)&&!(o&&!o(e)))}function f(a,e){var n=a.exact,i=a.fetching,t=a.predicate,r=a.mutationKey;if(M(r)){if(!e.options.mutationKey)return!1;if(n){if(g(e.options.mutationKey)!==g(r))return!1}else if(!m(e.options.mutationKey,r))return!1}return("boolean"!==typeof i||"loading"===e.state.status===i)&&!(t&&!t(e))}function S(a,e){return((null==e?void 0:e.queryKeyHashFn)||g)(a)}function g(a){return JSON.stringify(a,(function(a,e){return k(e)?Object.keys(e).sort().reduce((function(a,n){return a[n]=e[n],a}),{}):e}))}function m(a,e){return A(a,e)}function A(a,e){return a===e||typeof a===typeof e&&(!(!a||!e||"object"!==typeof a||"object"!==typeof e)&&!Object.keys(e).some((function(n){return!A(a[n],e[n])})))}function v(a,e){if(a===e)return a;var n=b(a)&&b(e);if(n||k(a)&&k(e)){for(var i=n?a.length:Object.keys(a).length,t=n?e:Object.keys(e),r=t.length,o=n?[]:{},u=0,s=0;s<r;s++){var l=n?s:t[s];o[l]=v(a[l],e[l]),o[l]===a[l]&&u++}return i===r&&u===i?a:o}return e}function y(a,e){if(a&&!e||e&&!a)return!1;for(var n in a)if(a[n]!==e[n])return!1;return!0}function b(a){return Array.isArray(a)&&a.length===Object.keys(a).length}function k(a){if(!p(a))return!1;var e=a.constructor;if("undefined"===typeof e)return!0;var n=e.prototype;return!!p(n)&&!!n.hasOwnProperty("isPrototypeOf")}function p(a){return"[object Object]"===Object.prototype.toString.call(a)}function M(a){return Array.isArray(a)}function C(a){return new Promise((function(e){setTimeout(e,a)}))}function B(a){C(0).then(a)}function N(){if("function"===typeof AbortController)return new AbortController}function K(a,e,n){return null!=n.isDataEqual&&n.isDataEqual(a,e)?a:"function"===typeof n.structuralSharing?n.structuralSharing(a,e):!1!==n.structuralSharing?v(a,e):e}},6403:function(a,e,n){n.d(e,{NL:function(){return u},aH:function(){return s}});var i=n(2791),t=i.createContext(void 0),r=i.createContext(!1);function o(a,e){return a||(e&&"undefined"!==typeof window?(window.ReactQueryClientContext||(window.ReactQueryClientContext=t),window.ReactQueryClientContext):t)}var u=function(){var a=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).context,e=i.useContext(o(a,i.useContext(r)));if(!e)throw new Error("No QueryClient set, use QueryClientProvider to set one");return e},s=function(a){var e=a.client,n=a.children,t=a.context,u=a.contextSharing,s=void 0!==u&&u;i.useEffect((function(){return e.mount(),function(){e.unmount()}}),[e]);var l=o(t,s);return i.createElement(r.Provider,{value:!t&&s},i.createElement(l.Provider,{value:e},n))}},7376:function(a,e,n){n.d(e,{D:function(){return A}});var i=n(1413),t=n(9439),r=n(2791),o=n(7248).useSyncExternalStore,u=n(3734),s=n(5671),l=n(3144),d=n(136),h=n(7277),c=n(9054),f=n(9538),S=function(a){(0,d.Z)(n,a);var e=(0,h.Z)(n);function n(a,i){var t;return(0,s.Z)(this,n),(t=e.call(this)).client=a,t.setOptions(i),t.bindMethods(),t.updateResult(),t}return(0,l.Z)(n,[{key:"bindMethods",value:function(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}},{key:"setOptions",value:function(a){var e,n=this.options;this.options=this.client.defaultMutationOptions(a),(0,u.VS)(n,this.options)||this.client.getMutationCache().notify({type:"observerOptionsUpdated",mutation:this.currentMutation,observer:this}),null==(e=this.currentMutation)||e.setOptions(this.options)}},{key:"onUnsubscribe",value:function(){var a;this.listeners.length||(null==(a=this.currentMutation)||a.removeObserver(this))}},{key:"onMutationUpdate",value:function(a){this.updateResult();var e={listeners:!0};"success"===a.type?e.onSuccess=!0:"error"===a.type&&(e.onError=!0),this.notify(e)}},{key:"getCurrentResult",value:function(){return this.currentResult}},{key:"reset",value:function(){this.currentMutation=void 0,this.updateResult(),this.notify({listeners:!0})}},{key:"mutate",value:function(a,e){return this.mutateOptions=e,this.currentMutation&&this.currentMutation.removeObserver(this),this.currentMutation=this.client.getMutationCache().build(this.client,(0,i.Z)((0,i.Z)({},this.options),{},{variables:"undefined"!==typeof a?a:this.options.variables})),this.currentMutation.addObserver(this),this.currentMutation.execute()}},{key:"updateResult",value:function(){var a=this.currentMutation?this.currentMutation.state:(0,c.R)(),e=(0,i.Z)((0,i.Z)({},a),{},{isLoading:"loading"===a.status,isSuccess:"success"===a.status,isError:"error"===a.status,isIdle:"idle"===a.status,mutate:this.mutate,reset:this.reset});this.currentResult=e}},{key:"notify",value:function(a){var e=this;f.V.batch((function(){var n,i,t,r;if(e.mutateOptions&&e.hasListeners())if(a.onSuccess)null==(n=(i=e.mutateOptions).onSuccess)||n.call(i,e.currentResult.data,e.currentResult.variables,e.currentResult.context),null==(t=(r=e.mutateOptions).onSettled)||t.call(r,e.currentResult.data,null,e.currentResult.variables,e.currentResult.context);else if(a.onError){var o,u,s,l;null==(o=(u=e.mutateOptions).onError)||o.call(u,e.currentResult.error,e.currentResult.variables,e.currentResult.context),null==(s=(l=e.mutateOptions).onSettled)||s.call(l,void 0,e.currentResult.error,e.currentResult.variables,e.currentResult.context)}a.listeners&&e.listeners.forEach((function(a){a(e.currentResult)}))}))}}]),n}(n(5511).l),g=n(6403),m=n(3433);function A(a,e,n){var s=(0,u.lV)(a,e,n),l=(0,g.NL)({context:s.context}),d=r.useState((function(){return new S(l,s)})),h=(0,t.Z)(d,1)[0];r.useEffect((function(){h.setOptions(s)}),[h,s]);var c,A,y=o(r.useCallback((function(a){return h.subscribe(f.V.batchCalls(a))}),[h]),(function(){return h.getCurrentResult()}),(function(){return h.getCurrentResult()})),b=r.useCallback((function(a,e){h.mutate(a,e).catch(v)}),[h]);if(y.error&&(c=h.options.useErrorBoundary,A=[y.error],"function"===typeof c?c.apply(void 0,(0,m.Z)(A)):c))throw y.error;return(0,i.Z)((0,i.Z)({},y),{},{mutate:b,mutateAsync:y.mutate})}function v(){}},2948:function(a,e,n){var i=n(7762),t=n(2791),r=Object.defineProperty,o=Object.defineProperties,u=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,h=function(a,e,n){return e in a?r(a,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[e]=n};(0,t.forwardRef)((function(a,e){var n,r,c=a,f=c.code,S=c.alt,g=void 0===S?f:S,m=c.size,A=void 0===m?24:m,v=c.width,y=void 0===v?A:v,b=c.height,k=void 0===b?A:b,p=function(a,e){var n={};for(var t in a)l.call(a,t)&&e.indexOf(t)<0&&(n[t]=a[t]);if(null!=a&&s){var r,o=(0,i.Z)(s(a));try{for(o.s();!(r=o.n()).done;)t=r.value,e.indexOf(t)<0&&d.call(a,t)&&(n[t]=a[t])}catch(u){o.e(u)}finally{o.f()}}return n}(c,["code","alt","size","width","height"]);return t.createElement("img",(n=function(a,e){for(var n in e||(e={}))l.call(e,n)&&h(a,n,e[n]);if(s){var t,r=(0,i.Z)(s(e));try{for(r.s();!(t=r.n()).done;)n=t.value,d.call(e,n)&&h(a,n,e[n])}catch(o){r.e(o)}finally{r.f()}}return a}({},p),r={ref:e,alt:g,width:y,height:k,src:"https://cdn.jsdelivr.net/gh/umidbekk/react-flag-kit@1/assets/".concat(f,".svg")},o(n,u(r))))})).displayName="FlagIcon"}}]);
//# sourceMappingURL=303.8fdb230e.chunk.js.map